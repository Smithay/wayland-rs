name: Continuous Integration

on:
  push:
    branches:
    - master
  pull_request:

jobs:
  ci:
    strategy:
      fail-fast: false
      matrix:
        rust: ['1.41.0', 'stable', 'beta']
        features: ['', 'client_native', 'server_native', 'both_native']
      
    runs-on: ubuntu-latest

    env:
      XDG_RUNTIME_DIR: ~/.runtime

    steps:
      - name: Checkout sources
        uses: actions/checkout@v2
        with:
          submodules: recursive
      
      - name: Cargo cache
        uses: actions/cache@v1
        with:
          path: ~/.cargo
          key: cargo-${{ matrix.rust }}
      
      - name: System dependencies
        run: sudo apt-get install libwayland-client0 libwayland-server0
      
      - name: Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          override: true
          components: rustfmt

      - name: Runtime directory
        run: sh -c 'mkdir -p $XDG_RUNTIME_DIR'

      - name: Test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --all --features "${{ matrix.features}}" --exclude wayland-egl --exclude wayland-cursor

      - name: Coverage
        uses: actions-rs/tarpaulin@v0.1
        with:
          version: '0.16.0'
          args: --ignore-tests --features "${{ matrix.features }}" --workspace --exclude wayland-egl --exclude wayland-cursor
      
      - name: Upload to codecov.io
        uses: codecov/codecov-action@v1
        with:
          flags: ${{ matrix.features }}
      
      - name: Test EGL
        if: matrix.features == 'client_native'
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --features "${{ matrix.features}}" -p wayland-egl
      
      - name: Test Cursor
        if: matrix.features == 'client_native'
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --features "${{ matrix.features}}" -p wayland-cursor
  
  lint:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout sources
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          components: rustfmt, clippy
      
      - name: Cargo fmt
        run: cargo fmt --all -- --check
      
      - name: Clippy rust impl
        run: cargo clippy --all --exclude wayland-egl --exclude wayland-cursor -- -D warnings
      
      - name: Clippy native lib
        run: cargo clippy --all --features "both_native" -- -D warnings
