name: Continuous Integration

on:
  push:
    branches:
    - master
  pull_request:

jobs:
  format:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          profile: minimal
          components: rustfmt
          default: true
      - name: Cargo cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo
          key: rust_stable-${{ hashFiles('**/Cargo.toml') }}
      - name: Format
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  clippy-check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          profile: minimal
          components: clippy
          default: true
      - name: Cargo cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo
          key: rust_stable-${{ hashFiles('**/Cargo.toml') }}
      - name: System dependencies
        run: sudo apt-get install libwayland-dev
      - name: Clippy
        uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --all --all-features --all-targets -- -D warnings -A clippy::non-send-fields-in-send-ty

  cargo-deny:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout sources
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - uses: EmbarkStudios/cargo-deny-action@v1

  check-minimal:
    needs:
      - format
      - clippy-check
      - cargo-deny
    env:
      RUSTFLAGS: "-D warnings"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true
          profile: minimal
          default: true
      - name: Cargo cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo
          key: rust_nightly-${{ hashFiles('**/Cargo.toml') }}
      - name: System dependencies
        run: sudo apt-get install libwayland-dev
      - name: Downgrade to minimal dependencies
        uses: actions-rs/cargo@v1
        with:
          command: update
          args: -Z minimal-versions
      - name: Check
        uses: actions-rs/cargo@v1
        with:
          command: check
          args: --all --all-features
  
  msrv:
    needs:
      - format
      - clippy-check
      - cargo-deny
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: 1.53.0
          override: true
          profile: minimal
          default: true
      - name: Cargo cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo
          key: rust_msrv-${{ hashFiles('**/Cargo.toml') }}
      - name: System dependencies
        run: sudo apt-get install libwayland-dev
      - name: Check
        uses: actions-rs/cargo@v1
        with:
          command: check
          args: --all --all-features
  
  coverage-main:
    needs:
      - format
      - clippy-check
      - msrv
      - check-minimal
      - cargo-deny
      
    runs-on: ubuntu-latest

    steps:
      - name: Checkout sources
        uses: actions/checkout@v2
        with:
          submodules: recursive
      
      - name: Cargo cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo
          key: rust_nightly_coverage-${{ hashFiles('**/Cargo.toml') }}
      
      - name: System dependencies
        run: sudo apt-get install libwayland-dev
      
      - name: Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true
          default: true
          components: llvm-tools-preview, rustfmt

      - name: Runtime directory
        run: |
          mkdir -p $(pwd)/.runtime
          echo "XDG_RUNTIME_DIR=$(pwd)/.runtime" >> $GITHUB_ENV

      - name: Install grcov
        uses: actions-rs/cargo@v1
        with:
          command: install
          args: grcov

      - name: Run tests
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --workspace --exclude 'wayland-tests'
        env:
          LLVM_PROFILE_FILE: "wayland-rs-%p-%m.profraw"
          RUSTFLAGS: "-Cinstrument-coverage --cfg coverage"

      - name: Coverage
        run: grcov . --binary-path ./target/debug -s . -t lcov --branch --llvm --ignore-not-existing --ignore 'wayland-backend/src/test/*' --ignore '*/examples/*' --ignore '*/tests/*' --ignore '*/.cargo/registry/*' --excl-br-start "mod tests \{" --excl-start "mod tests \{" --excl-br-line "#\[derive\(" --excl-line "#\[derive\(" -o lcov.info

      - name: Upload to codecov.io
        uses: codecov/codecov-action@v1
        with:
          flags: main
  
  coverage-tests:
    needs:
      - format
      - clippy-check
      - msrv
      - check-minimal
      - cargo-deny
      
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        client_feature: ["", "client_system"]
        server_feature: ["", "server_system"]

    steps:
      - name: Checkout sources
        uses: actions/checkout@v2
        with:
          submodules: recursive
      
      - name: Cargo cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo
          key: rust_nightly_coverage-${{ hashFiles('**/Cargo.toml') }}
      
      - name: System dependencies
        run: sudo apt-get install libwayland-dev
      
      - name: Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true
          default: true
          components: llvm-tools-preview, rustfmt

      - name: Runtime directory
        run: |
          mkdir -p $(pwd)/.runtime
          echo "XDG_RUNTIME_DIR=$(pwd)/.runtime" >> $GITHUB_ENV

      - name: Install grcov
        uses: actions-rs/cargo@v1
        with:
          command: install
          args: grcov

      - name: Run tests
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: -p wayland-tests --features "${{ matrix.client_feature }} ${{ matrix.server_feature}}"
        env:
          LLVM_PROFILE_FILE: "wayland-rs-%p-%m.profraw"
          RUSTFLAGS: "-Cinstrument-coverage --cfg coverage"
      
      - name: Coverage
        run: grcov . --binary-path ./target/debug -s . -t lcov --branch --llvm --ignore-not-existing --ignore 'wayland-tests/*' --ignore '*/examples/*' --ignore '*/tests/*' --ignore '*/.cargo/registry/*' --excl-br-start "mod tests \{" --excl-start "mod tests \{" --excl-br-line "#\[derive\(" --excl-line "#\[derive\(" -o lcov.info

      - name: Upload to codecov.io
        uses: codecov/codecov-action@v1
        with:
          flags: test-${{ matrix.client_feature }}-${{ matrix.server_feature }}
 