searchState.loadedDescShard("wayland_client", 0, "Interface for interacting with the Wayland protocol, …\nThe backend generated an error\nThe received message does not match the specification for …\nAn error when trying to establish a Wayland connection.\nThe Wayland connection\nA trait for handlers of proxies’ events delivered to an …\nWayland dispatching error\nThe event enum for this interface\nAn event queue\n<code>WAYLAND_SOCKET</code> was set but contained garbage\nCould not find wayland compositor\nThe wayland library could not be loaded.\nTrait representing a Wayland interface\nA handle that temporarily pauses event processing on an …\nA handle representing an <code>EventQueue</code>, used to assign …\nThe <code>ObjectData</code> implementation used by Wayland proxies, …\nThe request enum for this interface\nThe stored value does not match one defined by the …\nThe interpreted value\nAn enum value in the protocol.\nA weak handle to a Wayland object\nProvides fd from <code>Backend::poll_fd</code> for polling.\nProvides fd from <code>Backend::poll_fd()</code> for polling.\nBackend reexports\nAccess the backend associated with this object\nGet the <code>Backend</code> underlying this <code>Connection</code>\nBlock waiting for events and dispatch them\nTry to connect to the Wayland server following the …\nAccess the user-data associated with this object\nA helper macro which delegates a set of <code>Dispatch</code> …\nA helper macro which delegates a set of <code>Dispatch</code> …\nDispatch pending events\nGet the <code>WlDisplay</code> associated with this connection\nCreates a weak handle to this object\nCalled when an event from the server is processed\nMethod used to initialize the user-data of objects created …\nMethod used to initialize the user-data of objects created …\nMacro used to override <code>Dispatch::event_created_child()</code>\nFlush pending outgoing events to the server\nFlush pending outgoing events to the server\nTemporarily block processing on this queue.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConstructs an enum from the integer format used by the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nWrap an existing <code>Backend</code> into a <code>Connection</code>\nCreate an object proxy from its ID\nInitialize a Wayland connection from an already existing …\nGet the object data for a given object ID\nHelpers for handling the initialization of an app\nGet a <code>QueueHandle</code> for this event queue\nThe ID of this object\nThe underlying <code>ObjectId</code>\nCreate an inert object proxy\nThe interface description\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConvert this <code>WEnum</code> into a result\nChecks if the Wayland object associated with this proxy is …\nCreate an object data associated with this event queue\nCreate a new event queue\nAccess the raw data associated with this object.\nGet the protocol information related to given object ID\nParse a event for this object\nAttempt to dispatch events from this queue, registering …\nStart a synchronized read from the socket\nStart a synchronized read from the socket\nGenerated protocol definitions\nRetrieve the protocol error that occured on the connection …\nSynchronous roundtrip\nDo a roundtrip to the server\nSend a request for this object that creates another object.\nSend a request for this object.\nSend a request associated with the provided object\nThe user data associated with this object\nTry to upgrade with weak handle back into a full proxy.\nThe version of this object\nSerialize a request for this object\nThe interface of the target object\nThe opcode number\nThe id of the target object\nA Wayland client backend\nAn error generated when trying to act on an invalid …\nThe connection encountered an IO error\nAn error type representing the failure to load libwayland\nA trait representing your data associated to an object\nAn ID representing a Wayland object\nThe connection encountered a protocol error\nGuard for synchronizing event reading across multiple …\nAn error that can occur when using a Wayland connection\nA weak handle to a <code>Backend</code>\nGet the underlying libwayland pointer for this object\nTry to initialize a Wayland backend on the provided unix …\nAccess the Wayland socket FD for polling\nHelper for accessing user data\nHelper for forwarding a Debug implementation of your …\nNotification that the object has been destroyed and is no …\nDispatches the inner queue of this backend if necessary\nGet the object ID for the <code>wl_display</code>\nReturns the underlying <code>wl_display</code> pointer to this backend.\nReturns a boxed object from a boxed trait object if the …\nReturns an <code>Arc</code>-ed object from an <code>Arc</code>-ed trait object if …\nReturns a mutable reference to the object within the trait …\nReturns an <code>Rc</code>-ed object from an <code>Rc</code>-ed trait object if the …\nReturns a reference to the object within the trait object …\nGet a <code>WeakBackend</code> from this backend\nDispatch an event for the associated object\nFlush all pending outgoing requests to the server\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a Backend from a foreign <code>*mut wl_display</code>.\nCreates an object id from a libwayland-client pointer.\nAccess the object data associated with a given object ID\nGet the detailed protocol information about a wayland …\nInterface of the represented object\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns true if the trait object wraps an object of type …\nCheck if this is a null ID\nGet the last error that occurred on this backend\nTake over handling for a proxy created by a third party.\nCreate a null object ID\nAccess the Wayland socket FD for polling\nCreate a new reading guard\nTypes and utilities for manipulating the Wayland protocol\nReturn the protocol-level numerical ID of this object\nAttempt to read events from the Wayland socket\nThe same as <code>read</code>, but doesn’t dispatch events.\nSends a request to the server\nSet the object data associated with a given object ID\nTry to upgrade this weak handle to a <code>Backend</code>\nSpecial interface representing an anonymous object\nDescribes whether an argument may have a null value.\nEnum of possible argument of the protocol\nEnum of possible argument types as recognized by the wire\n<code>Vec&lt;u8&gt;</code>\n<code>Vec&lt;u8&gt;</code>\nA file descriptor argument. Represented by a <code>RawFd</code>.\nA file descriptor argument. Represented by a <code>RawFd</code>.\nA signed fixed point number with 1/256 precision\nA signed fixed point number with 1/256 precision\nNumber of arguments that are stocked inline in a <code>Message</code> …\nAn integer argument. Represented by a <code>i32</code>.\nAn integer argument. Represented by a <code>i32</code>.\nDescription of wayland interface.\nRepresents a message that has been sent from some object.\nWire metadata of a given message\nId of a newly created wayland object\nId of a newly created wayland object\nNull values are forbidden.\nId of a wayland object\nId of a wayland object\nDescription of the protocol-level information of an object\nA protocol error\nA string. This is represented as a <code>CString</code> in a message.\nCString\nAn unsigned integer argument. Represented by a <code>u32</code>.\nAn unsigned integer argument. Represented by a <code>u32</code>.\nThe stored value does not match one defined by the …\nThe interpreted value\nAn enum value in the protocol.\nError representing an unknown numeric variant for a <code>WEnum</code>\nNull values are allowed.\nThe interfaces passed into this message as arguments.\nThe arguments of the message.\nA C representation of this interface that may be used to …\nThe child interface created from this message.\nThe error code associated with the error\nA list that describes every event this interface supports.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nRetrieve the type of a given argument instance\nThe protocol ID\nThe interface\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether this message is a destructor\nMap some closure on all Fd contained in this message, to …\nThe message sent by the server describing the error\nThe name of the interface.\nName of this message\nThe id of the object that caused the error\nThe interface of the object that caused the error\nThe opcode of the message.\nA list that describes every request this interface …\nReturns true if the two interfaces are the same.\nReturns true if the type of the argument is the same.\nThe id of the object that sent the message.\nSignature of the message\nMinimum required version of the interface\nThe maximum supported version of the interface.\nThe version\nThe backend generated an error\nAn error that occurs when a binding a global fails.\nDescription of a global.\nAn error that may occur when initializing the global list.\nA helper for global initialization.\nA container representing the current contents of the list …\nAn invalid object id was acted upon.\nThe requested global was not found in the registry.\nThe requested version of the global is not supported.\nBinds a global, returning a new protocol object associated …\nGet a copy of the contents of the list of globals.\nAccess the contents of the list of globals\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe interface of the global.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe name of the global.\nReturns the <code>WlRegistry</code> protocol object.\nInitialize a new event queue with its associated registry …\nThe advertised version of the global.\nAccess the list of globals\ncontent for a wl_surface\ncallback object\nthe compositor singleton\ndata transfer device\ndata transfer interface\noffer to transfer data\noffer to transfer data\ncore global object\nwayland protocol fixes\nkeyboard input device\ncompositor output region\npointer input device\nregion interface\nglobal registry object\ngroup of input devices\ncreate desktop-style surfaces\ndesktop-style metadata interface\nshared memory support\na shared memory pool\nsub-surface compositing\nsub-surface interface to a wl_surface\nan onscreen surface\ntouchscreen input device\ndestroy a buffer\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this request\nThe minimal object version supporting this request\ncompositor releases buffer\ncontent for a wl_surface\ndestroy a buffer\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\ndone event\nThe wire opcode for this event\nThe minimal object version supporting this event\ncallback object\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nrequest-specific data for the callback\ncreate new region\ncreate new surface\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nthe compositor singleton\ncreate new region\ncreate new surface\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nintroduce a new wl_data_offer\nend drag-and-drop session successfully\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\ninitiate drag-and-drop session\nend drag-and-drop session\ndrag-and-drop session motion\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\ndestroy data device\ngiven wl_surface has another role\nadvertise new selection\ncopy data to the selection\nstart drag-and-drop operation\nsource has already been used\ndata transfer device\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\ndestroy data device\ncopy data to the selection\nstart drag-and-drop operation\nthe new data_offer object\nsource data_offer object\nselection data_offer object\nserial number of the enter event\nclient surface entered\ntimestamp with millisecond granularity\nsurface-local x coordinate\nsurface-local x coordinate\nsurface-local y coordinate\nsurface-local y coordinate\ndrag-and-drop icon surface\nsurface where the drag originates\nserial number of the implicit grab on the origin\nserial number of the event that triggered this request\ndata source for the eventual transfer\ndata source for the selection\nask action\ncopy action\ncreate a new data source\ndrag and drop actions\ncreate a new data device\nmove action\nno action\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\ndata transfer interface\nGet a flags value with all known bits set.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nGet the underlying bits value.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nWhether all set bits in a source flags value are also set …\ncreate a new data source\nThe intersection of a source flags value with the …\nGet a flags value with all bits unset.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from a bits value.\nConvert from a bits value exactly.\nConvert from a bits value, unsetting any unknown bits.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nGet a flags value with the bits of a flag with the given …\ncreate a new data device\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nWhether any set bits in a source flags value are also set …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether all known bits in this flags value are set.\nWhether all bits in this flags value are unset.\nYield a set of contained flags values.\nYield a set of contained named flags values.\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nGet the opcode number of this message\nGet the opcode number of this message\nThe intersection of a source flags value with the …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nseat associated with the data device\naccept one of the offered mime types\nnotify the selected action\ndestroy data offer\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nthe offer will no longer be used\naction argument has an invalid value\naction mask contains invalid values\nfinish request was called untimely\noffer doesn’t accept this request\nadvertise offered mime type\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nrequest that the data is transferred\nset the available/preferred drag-and-drop actions\nnotify the source-side available actions\noffer to transfer data\naccept one of the offered mime types\ndestroy data offer\nthe offer will no longer be used\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nrequest that the data is transferred\nset the available/preferred drag-and-drop actions\naction selected by the compositor\noffered mime type\nactions offered by the data source\nactions supported by the destination client\nfile descriptor for data transfer\nmime type accepted by the client\nmime type desired by receiver\naction preferred by the destination client\nserial number of the accept request\nnotify the selected action\nselection was cancelled\ndestroy the data source\nthe drag-and-drop operation physically finished\nthe drag-and-drop operation concluded\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\naction mask contains invalid values\nsource doesn’t accept this request\nadd an offered mime type\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nsend the data\nset the available drag-and-drop actions\na target accepts an offered mime type\noffer to transfer data\ndestroy the data source\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nadd an offered mime type\nGet the opcode number of this message\nGet the opcode number of this message\nset the available drag-and-drop actions\naction selected by the compositor\nfile descriptor for the data\nmime type accepted by the target\nmime type for the data\nactions supported by the data source\nmime type offered by the data source\nacknowledge object ID deletion\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nglobal error values\nfatal error event\nget global registry object\nimplementation error in compositor\nmethod doesn’t exist on the specified interface or …\nserver couldn’t find object\nserver is out of memory\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nasynchronous roundtrip\ncore global object\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nget global registry object\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nasynchronous roundtrip\nerror code\ndeleted object ID\nerror description\nobject where the error occurred\ndestroys this object\ndestroy a wl_registry\nThe wire opcode for this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe minimal object version supporting this request\nwayland protocol fixes\ndestroys this object\ndestroy a wl_registry\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nthe registry to destroy\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nenter event\nkey event\nphysical key state\nkeyboard mapping\nkeyboard mapping format\nleave event\nmodifier and group state\nno keymap; client must understand how to interpret the raw …\nkey is pressed\nThe wire opcode for this request\nThe minimal object version supporting this request\nrelease the keyboard object\nkey is not pressed\nrepeat rate and delay\nkey was repeated\nkeyboard input device\nlibxkbcommon compatible, null-terminated string; to …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nrelease the keyboard object\ndelay in milliseconds since key down until repeating starts\nkeymap file descriptor\nkeymap format\nkeyboard layout\nkey that produced the event\nthe keys currently logically down\ndepressed modifiers\nlatched modifiers\nlocked modifiers\nthe rate of repeating keys in characters per second\nserial number of the enter event\nserial number of the leave event\nserial number of the key event\nserial number of the modifiers event\nkeymap size, in bytes\nphysical state of the key\nsurface gaining keyboard focus\nsurface that lost keyboard focus\ntimestamp with millisecond granularity\nindicates this is the current mode\nhuman-readable description of this output\nsent all information about output\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\n180 degree flip around a vertical axis\nflip and rotate 180 degrees counter-clockwise\nflip and rotate 270 degrees counter-clockwise\nflip and rotate 90 degrees counter-clockwise\nproperties of the output\nhorizontal BGR\nhorizontal RGB\nmode information\nadvertise available modes for the output\nname of this output\nno geometry\nno transform\nindicates this is the preferred mode\nThe wire opcode for this request\nThe minimal object version supporting this request\nrelease the output object\noutput scaling properties\nsubpixel geometry information\ntransformation applied to buffer contents\nunknown geometry\nvertical BGR\nvertical RGB\ncompositor output region\n180 degrees counter-clockwise\n270 degrees counter-clockwise\n90 degrees counter-clockwise\nGet a flags value with all known bits set.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nGet the underlying bits value.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nWhether all set bits in a source flags value are also set …\nThe intersection of a source flags value with the …\nGet a flags value with all bits unset.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from a bits value.\nConvert from a bits value exactly.\nConvert from a bits value, unsetting any unknown bits.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nGet a flags value with the bits of a flag with the given …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nWhether any set bits in a source flags value are also set …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether all known bits in this flags value are set.\nWhether all bits in this flags value are unset.\nYield a set of contained flags values.\nYield a set of contained named flags values.\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nGet the opcode number of this message\nGet the opcode number of this message\nrelease the output object\nThe intersection of a source flags value with the …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\noutput description\nscaling factor of output\nbitfield of mode flags\nheight of the mode in hardware units\ntextual description of the manufacturer\ntextual description of the model\noutput name\nheight in millimeters of the output\nwidth in millimeters of the output\nvertical refresh rate in mHz\nsubpixel orientation of the output\nadditional transformation applied to buffer contents …\nwidth of the mode in hardware units\nx position within the global compositor space\ny position within the global compositor space\naxis types\naxis event\naxis click event\naxis relative direction\naxis relative physical direction event\naxis source types\naxis source event\naxis stop event\naxis high-resolution scroll event\npointer button event\nphysical button state\ncontinuous coordinate space\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nenter event\nfinger on a touch surface\nend of a pointer event sequence\nhorizontal axis\nphysical motion matches axis direction\nphysical motion is the inverse of the axis direction\nleave event\npointer motion event\nthe button is pressed\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nrelease the pointer object\nthe button is not pressed\ngiven wl_surface has another role\nset the pointer surface\nvertical axis\na physical wheel rotation\na physical wheel tilt\npointer input device\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nrelease the pointer object\nset the pointer surface\naxis type\nthe axis stopped with this event\naxis type\naxis type\naxis type\nsource of the axis event\nbutton that produced the event\nphysical direction relative to axis motion\nnumber of steps\nserial number of the enter event\nserial number of the leave event\nserial number of the button event\nphysical state of the button\nsurface entered by the pointer\nsurface left by the pointer\nsurface-local x coordinate\nsurface-local x coordinate\nsurface-local y coordinate\nsurface-local y coordinate\ntimestamp with millisecond granularity\ntimestamp with millisecond granularity\ntimestamp with millisecond granularity\ntimestamp with millisecond granularity\nlength of vector in surface-local coordinate space\nscroll distance as fraction of 120\nsurface-local x coordinate\nsurface-local y coordinate\nserial number of the enter event\npointer surface\nadd rectangle to region\ndestroy region\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nsubtract rectangle from region\nregion interface\nadd rectangle to region\ndestroy region\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nsubtract rectangle from region\nrectangle height\nrectangle height\nrectangle width\nrectangle width\nregion-local x coordinate\nregion-local x coordinate\nregion-local y coordinate\nregion-local y coordinate\nbind an object to the display\nThe wire opcode for this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe minimal object version supporting this event\nannounce global object\nannounce removal of global object\nThe wire opcode for this request\nThe minimal object version supporting this request\nglobal registry object\nbind an object to the display\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\ninterface implemented by the object\nnumeric name of the global object\nnumeric name of the global object\ninterface version\nbounded object\nunique numeric name of the object\nseat capabilities changed\nseat capability bitmask\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nwl_seat error values\nreturn keyboard object\nreturn pointer object\nreturn touch object\nthe seat has one or more keyboards\nget_pointer, get_keyboard or get_touch called on seat …\nunique identifier for this seat\nthe seat has pointer devices\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nrelease the seat object\nthe seat has touch devices\ngroup of input devices\nGet a flags value with all known bits set.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nGet the underlying bits value.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nWhether all set bits in a source flags value are also set …\nThe intersection of a source flags value with the …\nGet a flags value with all bits unset.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from a bits value.\nConvert from a bits value exactly.\nConvert from a bits value, unsetting any unknown bits.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nGet a flags value with the bits of a flag with the given …\nreturn keyboard object\nreturn pointer object\nreturn touch object\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nWhether any set bits in a source flags value are also set …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether all known bits in this flags value are set.\nWhether all bits in this flags value are unset.\nYield a set of contained flags values.\nYield a set of contained named flags values.\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nGet the opcode number of this message\nGet the opcode number of this message\nrelease the seat object\nThe intersection of a source flags value with the …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\ncapabilities of the seat\nseat identifier\ncreate a shell surface from a surface\nThe wire opcode for this request\nThe minimal object version supporting this request\ngiven wl_surface has another role\ncreate desktop-style surfaces\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\ncreate a shell surface from a surface\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nsurface to be given the shell surface role\nbottom edge\nbottom and left edges\nbottom and right edges\nsuggest resize\nno preference, apply default policy\nswitch output mode to the smallest mode that can fit the …\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nno upscaling, center on output and add black borders to …\ndifferent method to set the surface fullscreen\ndo not set keyboard focus\nleft edge\nstart an interactive move\nno edge\nping client\nrespond to a ping event\npopup interaction is done\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nedge values for resizing\nstart an interactive resize\nright edge\nscale, preserve the surface’s aspect ratio and center on …\nset surface class\nmake the surface a fullscreen surface\nmake the surface a maximized surface\nmake the surface a popup surface\nset surface title\nmake the surface a toplevel surface\nmake the surface a transient surface\ntop edge\ntop and left edges\ntop and right edges\ndetails of transient behaviour\ndesktop-style metadata interface\nstart an interactive move\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nGet the underlying bits value.\nGet the underlying bits value.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nGet the opcode number of this message\nGet the opcode number of this message\nrespond to a ping event\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nstart an interactive resize\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nset surface class\nmake the surface a fullscreen surface\nmake the surface a maximized surface\nmake the surface a popup surface\nset surface title\nmake the surface a toplevel surface\nmake the surface a transient surface\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nhow the surface was resized\nnew height of the surface\nserial number of the ping\nnew width of the surface\nsurface class\nwhich edge or corner is being dragged\ntransient surface behavior\ntransient surface behavior\nframerate in mHz\nmethod for resolving size conflict\noutput on which the surface is to be fullscreen\noutput on which the surface is to be maximized\nparent surface\nparent surface\nseat whose pointer is used\nseat whose pointer is used\nseat whose pointer is used\nserial number of the ping event\nserial number of the implicit grab on the pointer\nserial number of the implicit grab on the pointer\nserial number of the implicit grab on the pointer\nsurface title\nsurface-local x coordinate\nsurface-local x coordinate\nsurface-local y coordinate\nsurface-local y coordinate\n16-bit ABGR 1555 format, [15:0] A:B:G:R 1:5:5:5 little …\n[63:0] A:B:G:R 16:16:16:16 little endian\n[63:0] A:B:G:R 16:16:16:16 little endian\n32-bit ABGR format, [31:0] A:B:G:R 2:10:10:10 little endian\n16-bit ABGR format, [15:0] A:B:G:R 4:4:4:4 little endian\n32-bit ABGR format, [31:0] A:B:G:R 8:8:8:8 little endian\n16-bit ARGB 1555 format, [15:0] A:R:G:B 1:5:5:5 little …\n[63:0] A:R:G:B 16:16:16:16 little endian\n[63:0] A:R:G:B 16:16:16:16 little endian\n32-bit ARGB format, [31:0] A:R:G:B 2:10:10:10 little endian\n16-bit ARGB format, [15:0] A:R:G:B 4:4:4:4 little endian\n32-bit ARGB format, [31:0] A:R:G:B 8:8:8:8 little endian\n[31:0] A:Cr:Cb:Y 8:8:8:8 little endian\n[63:0] A:x:B:x:G:x:R:x 10:6:10:6:10:6:10:6 little endian\npacked AYCbCr format, [31:0] A:Y:Cb:Cr 8:8:8:8 little …\n8-bit BGR format, [7:0] B:G:R 2:3:3\n16-bit BGR 565 format, [15:0] B:G:R 5:6:5 little endian\n24-bit BGR format, [23:0] B:G:R little endian\n32-bit BGRA format, [31:0] B:G:R:A 10:10:10:2 little endian\n16-bit BGRA format, [15:0] B:G:R:A 4:4:4:4 little endian\n16-bit BGRA 5551 format, [15:0] B:G:R:A 5:5:5:1 little …\n32-bit BGRA format, [31:0] B:G:R:A 8:8:8:8 little endian\n32-bit BGRx format, [31:0] B:G:R:x 10:10:10:2 little endian\n16-bit BGRx format, [15:0] B:G:R:x 4:4:4:4 little endian\n16-bit BGRx 5551 format, [15:0] B:G:R:x 5:5:5:1 little …\n32-bit BGRx format, [31:0] B:G:R:x 8:8:8:8 little endian\n[7:0] C0:C1:C2:C3:C4:C5:C6:C7 1:1:1:1:1:1:1:1 eight …\n[7:0] C0:C1:C2:C3 2:2:2:2 four pixels/byte\n[7:0] C0:C1 4:4 two pixels/byte\n8-bit color index format, [7:0] C\ncreate a shm pool\n[7:0] D0:D1:D2:D3:D4:D5:D6:D7 1:1:1:1:1:1:1:1 eight …\n[7:0] D0:D1:D2:D3 2:2:2:2 four pixels/byte\n[7:0] D0:D1 4:4 two pixels/byte\n[7:0] D\nThe wire opcode for this event\nThe minimal object version supporting this event\nwl_shm error values\npixel formats\npixel format description\n[31:0] G:R 16:16 little endian\n[15:0] G:R 8:8 little endian\nmmapping the file descriptor failed\nbuffer format is not known\ninvalid size or stride during pool or buffer creation\n2 plane YCbCr Cr:Cb format, 2x2 subsampled Cr:Cb plane\n2x2 subsampled Cr:Cb plane\n2 plane YCbCr Cr:Cb format, 2x1 subsampled Cr:Cb plane\n2 plane YCbCr Cb:Cr format, 2x2 subsampled Cb:Cr plane\nnon-subsampled Cr:Cb plane\nnon-subsampled Cb:Cr plane\n2 plane YCbCr Cb:Cr format, 2x1 subsampled Cb:Cr plane\n2x2 subsampled Cr:Cb plane 10 bits per channel\n2x2 subsampled Cr:Cb plane 12 bits per channel\n2x2 subsampled Cr:Cb plane 16 bits per channel\n2x2 subsampled Cr:Cb plane 10 bits per channel packed\n2x1 subsampled Cr:Cb plane, 10 bit per channel\n[7:0] R0:R1:R2:R3:R4:R5:R6:R7 1:1:1:1:1:1:1:1 eight …\n[15:0] x:R 6:10 little endian\n[15:0] x:R 4:12 little endian\n[15:0] R little endian\n[7:0] R0:R1:R2:R3 2:2:2:2 four pixels/byte\n[7:0] R0:R1 4:4 two pixels/byte\n[7:0] R\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nrelease the shm object\n[31:0] R:G 16:16 little endian\n[15:0] R:G 8:8 little endian\n8-bit RGB format, [7:0] R:G:B 3:3:2\n16-bit RGB 565 format, [15:0] R:G:B 5:6:5 little endian\n24-bit RGB format, [23:0] R:G:B little endian\n32-bit RGBA format, [31:0] R:G:B:A 10:10:10:2 little endian\n16-bit RBGA format, [15:0] R:G:B:A 4:4:4:4 little endian\n16-bit RGBA 5551 format, [15:0] R:G:B:A 5:5:5:1 little …\n32-bit RGBA format, [31:0] R:G:B:A 8:8:8:8 little endian\n32-bit RGBx format, [31:0] R:G:B:x 10:10:10:2 little endian\n16-bit RGBx format, [15:0] R:G:B:x 4:4:4:4 little endian\n16-bit RGBx 5551 format, [15:0] R:G:B:x 5:5:5:1 little …\n32-bit RGBx format, [31:0] R:G:B:x 8:8:8:8 little endian\npacked YCbCr format, [31:0] Y1:Cr0:Y0:Cb0 8:8:8:8 little …\nY followed by U then V, 10:10:10. Non-linear modifier only\n[23:0] Cr:Cb:Y 8:8:8 little endian\npacked YCbCr format, [31:0] Y1:Cb0:Y0:Cr0 8:8:8:8 little …\nshared memory support\n[63:0] X3:X2:Y3:0:Cr0:0:Y2:0:X1:X0:Y1:0:Cb0:0:Y0:0 …\n[63:0] X3:X2:Y3:Cr0:Y2:X1:X0:Y1:Cb0:Y0 …\n16-bit xBGR 1555 format, [15:0] x:B:G:R 1:5:5:5 little …\n[63:0] x:B:G:R 16:16:16:16 little endian\n[63:0] x:B:G:R 16:16:16:16 little endian\n32-bit xBGR format, [31:0] x:B:G:R 2:10:10:10 little endian\n16-bit xBGR format, [15:0] x:B:G:R 4:4:4:4 little endian\n32-bit xBGR format, [31:0] x:B:G:R 8:8:8:8 little endian\n16-bit xRGB format, [15:0] x:R:G:B 1:5:5:5 little endian\n[63:0] x:R:G:B 16:16:16:16 little endian\n[63:0] x:R:G:B 16:16:16:16 little endian\n32-bit xRGB format, [31:0] x:R:G:B 2:10:10:10 little endian\n16-bit xRGB format, [15:0] x:R:G:B 4:4:4:4 little endian\n32-bit RGB format, [31:0] x:R:G:B 8:8:8:8 little endian\n[31:0] X:Cr:Cb:Y 8:8:8:8 little endian\n[63:0] X:0:Cr:0:Y:0:Cb:0 12:4:12:4:12:4:12:4 little endian\n[63:0] X:Cr:Y:Cb 16:16:16:16 little endian\n[31:0] X:Cr:Y:Cb 2:10:10:10 little endian\n[31:0] X:Y:Cb:Cr 8:8:8:8 little endian\n[63:0] A3:A2:Y3:0:Cr0:0:Y2:0:A1:A0:Y1:0:Cb0:0:Y0:0 …\n[63:0] A3:A2:Y3:Cr0:Y2:A1:A0:Y1:Cb0:Y0 …\n[63:0] Cr0:0:Y1:0:Cb0:0:Y0:0 10:6:10:6:10:6:10:6 little …\n[63:0] Cr0:0:Y1:0:Cb0:0:Y0:0 12:4:12:4:12:4:12:4 little …\n[63:0] Cr0:Y1:Cb0:Y0 16:16:16:16 little endian per 2 Y …\n[31:0] A:Cr:Y:Cb 2:10:10:10 little endian\n[63:0] A:0:Cr:0:Y:0:Cb:0 12:4:12:4:12:4:12:4 little endian\n[63:0] A:Cr:Y:Cb 16:16:16:16 little endian\n3 plane YCbCr format, 4x4 subsampled Cb (1) and Cr (2) …\n3 plane YCbCr format, 4x1 subsampled Cb (1) and Cr (2) …\n3 plane YCbCr format, 2x2 subsampled Cb (1) and Cr (2) …\n3 plane YCbCr format, 2x1 subsampled Cb (1) and Cr (2) …\n3 plane YCbCr format, non-subsampled Cb (1) and Cr (2) …\npacked YCbCr format, [31:0] Cr0:Y1:Cb0:Y0 8:8:8:8 little …\n3 plane YCbCr format, 4x4 subsampled Cr (1) and Cb (2) …\n3 plane YCbCr format, 4x1 subsampled Cr (1) and Cb (2) …\n3 plane YCbCr format, 2x2 subsampled Cr (1) and Cb (2) …\n3 plane YCbCr format, 2x1 subsampled Cr (1) and Cb (2) …\n3 plane YCbCr format, non-subsampled Cr (1) and Cb (2) …\npacked YCbCr format, [31:0] Cb0:Y1:Cr0:Y0 8:8:8:8 little …\ncreate a shm pool\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nrelease the shm object\nbuffer pixel format\nfile descriptor for the pool\npool size, in bytes\ncreate a buffer from the pool\ndestroy the pool\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nchange the size of the pool mapping\na shared memory pool\ncreate a buffer from the pool\ndestroy the pool\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nchange the size of the pool mapping\nbuffer pixel format\nbuffer height, in pixels\nbuffer byte offset within the pool\nnew size of the pool, in bytes\nnumber of bytes from the beginning of one row to the …\nbuffer width, in pixels\nthe to-be sub-surface parent is invalid\nthe to-be sub-surface is invalid\nunbind from the subcompositor interface\ngive a surface the role sub-surface\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nsub-surface compositing\nunbind from the subcompositor interface\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\ngive a surface the role sub-surface\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nthe parent surface\nthe surface to be turned into a sub-surface\nwl_surface is not a sibling or the parent\nremove sub-surface interface\nrestack the sub-surface\nrestack the sub-surface\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nset sub-surface to desynchronized mode\nreposition the sub-surface\nset sub-surface to synchronized mode\nsub-surface interface to a wl_surface\nremove sub-surface interface\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nrestack the sub-surface\nrestack the sub-surface\nset sub-surface to desynchronized mode\nreposition the sub-surface\nset sub-surface to synchronized mode\nthe reference surface\nthe reference surface\nx coordinate in the parent surface\ny coordinate in the parent surface\nset the surface contents\ncommit pending surface state\nmark part of the surface damaged\nmark part of the surface damaged using buffer coordinates\nsurface was destroyed before its role object\ndelete surface\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nsurface enters an output\nwl_surface error values\nrequest a frame throttling hint\nbuffer offset is invalid\nbuffer scale value is invalid\nbuffer size is invalid\nbuffer transform value is invalid\nsurface leaves an output\nset the surface contents offset\npreferred buffer scale for the surface\npreferred buffer transform for the surface\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nsets the buffer scaling factor\nsets the buffer transformation\nset input region\nset opaque region\nan onscreen surface\nset the surface contents\ncommit pending surface state\nmark part of the surface damaged\nmark part of the surface damaged using buffer coordinates\ndelete surface\nrequest a frame throttling hint\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nset the surface contents offset\nGet the opcode number of this message\nGet the opcode number of this message\nsets the buffer scaling factor\nsets the buffer transformation\nset input region\nset opaque region\npreferred scaling factor\noutput entered by the surface\noutput left by the surface\npreferred transform\nbuffer of surface contents\nheight of damage rectangle\nheight of damage rectangle\nopaque region of the surface\ninput region of the surface\nscale for interpreting buffer contents\ntransform for interpreting buffer contents\nwidth of damage rectangle\nwidth of damage rectangle\nsurface-local x coordinate\nsurface-local x coordinate\nbuffer-local x coordinate\nsurface-local x coordinate\nsurface-local y coordinate\nsurface-local y coordinate\nbuffer-local y coordinate\nsurface-local y coordinate\ntouch session cancelled\ntouch down event and beginning of a touch sequence\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nend of touch frame event\nupdate of touch point coordinates\nupdate orientation of touch point\nThe wire opcode for this request\nThe minimal object version supporting this request\nrelease the touch object\nupdate shape of touch point\nend of a touch event sequence\ntouchscreen input device\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nrelease the touch object\nthe unique ID of this touch point\nthe unique ID of this touch point\nthe unique ID of this touch point\nthe unique ID of this touch point\nthe unique ID of this touch point\nlength of the major axis in surface-local coordinates\nlength of the minor axis in surface-local coordinates\nangle between major axis and positive surface y-axis in …\nserial number of the touch down event\nserial number of the touch up event\nsurface touched\ntimestamp with millisecond granularity\ntimestamp with millisecond granularity\ntimestamp with millisecond granularity\nsurface-local x coordinate\nsurface-local x coordinate\nsurface-local y coordinate\nsurface-local y coordinate")