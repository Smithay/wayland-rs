searchState.loadedDescShard("wayland_server", 0, "Interface for interacting with the Wayland protocol, …\nThe requested socket name is already in use\nThe received message does not match the specification for …\nError that can occur when trying to bind a <code>ListeningSocket</code>\nA struct representing a Wayland client connected to your …\nHelper to initialize client-created objects\nA trait which provides an implementation for handling a …\nAn error generated if an illegal request was received from …\nThe Wayland display\nA handle to the Wayland display\nThe event enum for this interface\nA trait which provides an implementation for handling …\nSome other IO error occured\nAn utility representing a unix socket on which your …\nA newly created object that needs to be initialized. See …\nThe application was not able to create a file in …\nThe request enum for this interface\nTrait representing a Wayland interface\nThe <code>ObjectData</code> implementation that is internally used by …\nThe Environment variable <code>XDG_RUNTIME_DIR</code> is not set\nThe stored value does not match one defined by the …\nThe interpreted value\nAn enum value in the protocol.\nA weak handle to a Wayland object\nTry to accept a new connection to the listening socket\nProvides fd from <code>Backend::poll_fd</code> for polling.\nReturns a file descriptor that may be polled for readiness.\nReturns a file descriptor that may be polled for readiness.\nBackend reexports\nAccess the underlying <code>Backend</code> of this <code>Display</code>\nReturns the underlying <code>Handle</code> from <code>wayland-backend</code>.\nCalled when a client has bound this global.\nAttempt to bind a listening socket with given name\nAttempt to bind a listening socket with given name\nAttempt to bind a listening socket from a sequence of names\nChecks if the global should be advertised to some client.\nChecks if the global should be advertised to some client.\nThe client owning this object\nCreate a new protocol global\nCreate a new Wayland object in the protocol state of this …\nCreate a new Wayland object in the protocol state of this …\nSet a custom <code>ObjectData</code> for this object\nAccess the user-data associated with this object\nA helper macro which delegates a set of <code>Dispatch</code> …\nA helper macro which delegates a set of <code>GlobalDispatch</code> …\nCalled when the object this user data is associated with …\nCalled when the object this user data is associated with …\nDisable this global\nDispatch all requests received from clients to their …\nCreates a weak handle to this object\nFlush outgoing buffers into their respective sockets.\nFlush outgoing buffers into their respective sockets.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a <code>DisplayHandle</code> using a <code>Handle</code> from <code>wayland-backend</code>…\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConstructs an enum from the integer format used by the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreate an object resource from its ID\nRetrieve the <code>Client</code> which owns the object represented by …\nAccess the pid/uid/gid of this client\nAccess the data associated to this client\nAccess the object data associated with this object\nAccess the backend handle associated with this object\nRetrieve a <code>DisplayHandle</code> for this <code>Display</code>.\nThe ID of this object\nThe backend <code>ClientId</code> of this client\nThe underlying <code>ObjectId</code>\nInitialize an object by assigning it its user-data\nInsert a new client in your <code>Display</code>\nThe interface description\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConvert this <code>WEnum</code> into a result\nChecks if the Wayland object associated with this proxy is …\nCheck if this resource is still alive\nKill this client by triggering a protocol error\nCreate a new Wayland display\nAccess the raw data associated with this object.\nAttempt to retrieve an object from this client’s …\nAccess the protocol information for a Wayland object\nParse a event for this object\nTrigger a protocol error on this object\nPost an error on an uninitialized object.\nTrigger a protocol error on this object\nGenerated protocol definitions\nRemove this global\nCalled when a request from a client is processed.\nSend an event to this object\nSend an event to given Wayland object\nReturns the name of the listening socket.\nThe user-data associated with this object\nTry to upgrade with weak handle back into a full resource.\nThe version of this object\nSerialize an event for this object\nThe interface of the target object\nThe opcode number\nThe id of the target object\nA backend object that represents the state of a wayland …\nA trait representing your data associated to a client\nAn ID representing a Wayland client\nThe connection has been closed by the server or client.\nHolds the client credentials\nDescribes why a client has been disconnected from the …\nA trait representing the handling of new bound globals\nAn Id representing a global\nMain handle of a backend to the Wayland protocol\nAn error type representing the failure to initialize a …\nAn error generated when trying to act on an invalid …\nInitialized failed due to an underlying I/O error\nThe wayland system library could not be loaded\nA trait representing your data associated to an object\nAn ID representing a Wayland object\nThe server has sent the client a protocol error, …\nA weak reference to a <code>Handle</code>\nReturns the pointer that represents this object.\nA global has been bound\nCheck if given client is allowed to interact with given …\nCreates a global of the specified interface and version …\nCreate a new object for given client\nHelper for forwarding a Debug implementation of your …\nHelper for forwarding a Debug implementation of your …\nHelper for forwarding a Debug implementation of your …\nNotification that the object has been destroyed and is no …\nDisables a global object that is currently active.\nNotification that the client is disconnected\nDispatches all pending messages from all clients.\nDispatches all pending messages from the specified client.\nAccess the underlying <code>*mut wl_display</code> pointer\nReturns a boxed object from a boxed trait object if the …\nReturns a boxed object from a boxed trait object if the …\nReturns a boxed object from a boxed trait object if the …\nReturns an <code>Arc</code>-ed object from an <code>Arc</code>-ed trait object if …\nReturns an <code>Arc</code>-ed object from an <code>Arc</code>-ed trait object if …\nReturns an <code>Arc</code>-ed object from an <code>Arc</code>-ed trait object if …\nReturns a mutable reference to the object within the trait …\nReturns a mutable reference to the object within the trait …\nReturns a mutable reference to the object within the trait …\nReturns an <code>Rc</code>-ed object from an <code>Rc</code>-ed trait object if the …\nReturns an <code>Rc</code>-ed object from an <code>Rc</code>-ed trait object if the …\nReturns an <code>Rc</code>-ed object from an <code>Rc</code>-ed trait object if the …\nReturns a reference to the object within the trait object …\nReturns a reference to the object within the trait object …\nReturns a reference to the object within the trait object …\nGet a <code>WeakHandle</code> from this handle\nFlushes pending events destined for a client.\nFlushes pending events destined for a client.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates an object from a C pointer.\nReturns the id of the client which owns the object.\nRetrive the <code>Credentials</code> of a client\nReturns the data associated with a client.\nReturns the handler which manages the visibility and …\nReturns the data associated with an object.\nReturns the data associated with an object as a <code>dyn Any</code>\ngid of the client\nReturns information about a global.\nReturns a handle which represents the server side state of …\nNotification that the client was initialized\nInitializes a connection with a client.\nReturns the interface of this object.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns true if the trait object wraps an object of type …\nReturns true if the trait object wraps an object of type …\nReturns true if the trait object wraps an object of type …\nReturns whether this object is a null object.\nKills the connection to a client.\nInitialize a new Wayland backend\nReturns an object id that represents a null object.\nRetrieve the <code>ObjectId</code> for a wayland object given its …\nGet the detailed protocol information about a wayland …\npid of the client\nReturns the underlying file descriptor.\nPosts a protocol error on an object. This will also …\nTypes and utilities for manipulating the Wayland protocol\nReturn the protocol-level numerical ID of this object\nRemoves a global object and free its ressources.\nDispatch a request for the associated object\nCheck if two object IDs are associated with the same client\nSend an event to the client\nSets the data associated with some object.\nuid of the client\nTry to upgrade this weak handle to a <code>Handle</code>\nInvokes a closure for all clients connected to this server\nInvokes a closure for all objects owned by a client.\nSpecial interface representing an anonymous object\nDescribes whether an argument may have a null value.\nEnum of possible argument of the protocol\nEnum of possible argument types as recognized by the wire\n<code>Vec&lt;u8&gt;</code>\n<code>Vec&lt;u8&gt;</code>\nA file descriptor argument. Represented by a <code>RawFd</code>.\nA file descriptor argument. Represented by a <code>RawFd</code>.\nA signed fixed point number with 1/256 precision\nA signed fixed point number with 1/256 precision\nNumber of arguments that are stocked inline in a <code>Message</code> …\nAn integer argument. Represented by a <code>i32</code>.\nAn integer argument. Represented by a <code>i32</code>.\nDescription of wayland interface.\nRepresents a message that has been sent from some object.\nWire metadata of a given message\nId of a newly created wayland object\nId of a newly created wayland object\nNull values are forbidden.\nId of a wayland object\nId of a wayland object\nDescription of the protocol-level information of an object\nA protocol error\nA string. This is represented as a <code>CString</code> in a message.\nCString\nAn unsigned integer argument. Represented by a <code>u32</code>.\nAn unsigned integer argument. Represented by a <code>u32</code>.\nThe stored value does not match one defined by the …\nThe interpreted value\nAn enum value in the protocol.\nError representing an unknown numeric variant for a <code>WEnum</code>\nNull values are allowed.\nThe interfaces passed into this message as arguments.\nThe arguments of the message.\nA C representation of this interface that may be used to …\nThe child interface created from this message.\nThe error code associated with the error\nA list that describes every event this interface supports.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nRetrieve the type of a given argument instance\nThe protocol ID\nThe interface\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether this message is a destructor\nMap some closure on all Fd contained in this message, to …\nThe message sent by the server describing the error\nThe name of the interface.\nName of this message\nThe id of the object that caused the error\nThe interface of the object that caused the error\nThe opcode of the message.\nA list that describes every request this interface …\nReturns true if the two interfaces are the same.\nReturns true if the type of the argument is the same.\nThe id of the object that sent the message.\nSignature of the message\nMinimum required version of the interface\nThe maximum supported version of the interface.\nThe version\ncontent for a wl_surface\ncallback object\nthe compositor singleton\ndata transfer device\ndata transfer interface\noffer to transfer data\noffer to transfer data\nkeyboard input device\ncompositor output region\npointer input device\nregion interface\ngroup of input devices\ncreate desktop-style surfaces\ndesktop-style metadata interface\nshared memory support\na shared memory pool\nsub-surface compositing\nsub-surface interface to a wl_surface\nan onscreen surface\ntouchscreen input device\ndestroy a buffer\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this request\nThe minimal object version supporting this request\ncompositor releases buffer\ncontent for a wl_surface\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\ncompositor releases buffer\ndone event\nThe wire opcode for this event\nThe minimal object version supporting this event\ncallback object\ndone event\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nrequest-specific data for the callback\ncreate new region\ncreate new surface\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nthe compositor singleton\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nthe new surface\nthe new region\nintroduce a new wl_data_offer\nend drag-and-drop session successfully\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\ninitiate drag-and-drop session\nend drag-and-drop session\ndrag-and-drop session motion\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\ndestroy data device\ngiven wl_surface has another role\nadvertise new selection\ncopy data to the selection\nstart drag-and-drop operation\nsource has already been used\ndata transfer device\nintroduce a new wl_data_offer\nend drag-and-drop session successfully\ninitiate drag-and-drop session\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nend drag-and-drop session\ndrag-and-drop session motion\nGet the opcode number of this message\nGet the opcode number of this message\nadvertise new selection\nthe new data_offer object\nsource data_offer object\nselection data_offer object\nserial number of the enter event\nclient surface entered\ntimestamp with millisecond granularity\nsurface-local x coordinate\nsurface-local x coordinate\nsurface-local y coordinate\nsurface-local y coordinate\ndrag-and-drop icon surface\nsurface where the drag originates\nserial number of the implicit grab on the origin\nserial number of the event that triggered this request\ndata source for the eventual transfer\ndata source for the selection\nask action\ncopy action\ncreate a new data source\ndrag and drop actions\ncreate a new data device\nmove action\nno action\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\ndata transfer interface\nGet a flags value with all known bits set.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nGet the underlying bits value.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nWhether all set bits in a source flags value are also set …\nThe intersection of a source flags value with the …\nGet a flags value with all bits unset.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from a bits value.\nConvert from a bits value exactly.\nConvert from a bits value, unsetting any unknown bits.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nGet a flags value with the bits of a flag with the given …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nWhether any set bits in a source flags value are also set …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether all known bits in this flags value are set.\nWhether all bits in this flags value are unset.\nYield a set of contained flags values.\nYield a set of contained named flags values.\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nGet the opcode number of this message\nGet the opcode number of this message\nThe intersection of a source flags value with the …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\ndata source to create\ndata device to create\nseat associated with the data device\naccept one of the offered mime types\nnotify the selected action\ndestroy data offer\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nthe offer will no longer be used\naction argument has an invalid value\naction mask contains invalid values\nfinish request was called untimely\noffer doesn’t accept this request\nadvertise offered mime type\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nrequest that the data is transferred\nset the available/preferred drag-and-drop actions\nnotify the source-side available actions\noffer to transfer data\nnotify the selected action\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nadvertise offered mime type\nGet the opcode number of this message\nGet the opcode number of this message\nnotify the source-side available actions\naction selected by the compositor\noffered mime type\nactions offered by the data source\nactions supported by the destination client\nfile descriptor for data transfer\nmime type accepted by the client\nmime type desired by receiver\naction preferred by the destination client\nserial number of the accept request\nnotify the selected action\nselection was cancelled\ndestroy the data source\nthe drag-and-drop operation physically finished\nthe drag-and-drop operation concluded\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\naction mask contains invalid values\nsource doesn’t accept this request\nadd an offered mime type\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nsend the data\nset the available drag-and-drop actions\na target accepts an offered mime type\noffer to transfer data\nnotify the selected action\nselection was cancelled\nthe drag-and-drop operation physically finished\nthe drag-and-drop operation concluded\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nsend the data\na target accepts an offered mime type\naction selected by the compositor\nfile descriptor for the data\nmime type accepted by the target\nmime type for the data\nactions supported by the data source\nmime type offered by the data source\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nenter event\nkey event\nphysical key state\nkeyboard mapping\nkeyboard mapping format\nleave event\nmodifier and group state\nno keymap; client must understand how to interpret the raw …\nkey is pressed\nThe wire opcode for this request\nThe minimal object version supporting this request\nrelease the keyboard object\nkey is not pressed\nrepeat rate and delay\nkey was repeated\nkeyboard input device\nlibxkbcommon compatible, null-terminated string; to …\nenter event\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nkey event\nkeyboard mapping\nleave event\nmodifier and group state\nGet the opcode number of this message\nGet the opcode number of this message\nrepeat rate and delay\ndelay in milliseconds since key down until repeating starts\nkeymap file descriptor\nkeymap format\nkeyboard layout\nkey that produced the event\nthe keys currently logically down\ndepressed modifiers\nlatched modifiers\nlocked modifiers\nthe rate of repeating keys in characters per second\nserial number of the enter event\nserial number of the leave event\nserial number of the key event\nserial number of the modifiers event\nkeymap size, in bytes\nphysical state of the key\nsurface gaining keyboard focus\nsurface that lost keyboard focus\ntimestamp with millisecond granularity\nindicates this is the current mode\nhuman-readable description of this output\nsent all information about output\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\n180 degree flip around a vertical axis\nflip and rotate 180 degrees counter-clockwise\nflip and rotate 270 degrees counter-clockwise\nflip and rotate 90 degrees counter-clockwise\nproperties of the output\nhorizontal BGR\nhorizontal RGB\nmode information\nadvertise available modes for the output\nname of this output\nno geometry\nno transform\nindicates this is the preferred mode\nThe wire opcode for this request\nThe minimal object version supporting this request\nrelease the output object\noutput scaling properties\nsubpixel geometry information\ntransformation applied to buffer contents\nunknown geometry\nvertical BGR\nvertical RGB\ncompositor output region\n180 degrees counter-clockwise\n270 degrees counter-clockwise\n90 degrees counter-clockwise\nGet a flags value with all known bits set.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nGet the underlying bits value.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nWhether all set bits in a source flags value are also set …\nhuman-readable description of this output\nThe intersection of a source flags value with the …\nsent all information about output\nGet a flags value with all bits unset.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from a bits value.\nConvert from a bits value exactly.\nConvert from a bits value, unsetting any unknown bits.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nGet a flags value with the bits of a flag with the given …\nproperties of the output\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nWhether any set bits in a source flags value are also set …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether all known bits in this flags value are set.\nWhether all bits in this flags value are unset.\nYield a set of contained flags values.\nYield a set of contained named flags values.\nadvertise available modes for the output\nname of this output\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nGet the opcode number of this message\nGet the opcode number of this message\nThe intersection of a source flags value with the …\noutput scaling properties\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\noutput description\nscaling factor of output\nbitfield of mode flags\nheight of the mode in hardware units\ntextual description of the manufacturer\ntextual description of the model\noutput name\nheight in millimeters of the output\nwidth in millimeters of the output\nvertical refresh rate in mHz\nsubpixel orientation of the output\nadditional transformation applied to buffer contents …\nwidth of the mode in hardware units\nx position within the global compositor space\ny position within the global compositor space\naxis types\naxis event\naxis click event\naxis relative direction\naxis relative physical direction event\naxis source types\naxis source event\naxis stop event\naxis high-resolution scroll event\npointer button event\nphysical button state\ncontinuous coordinate space\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nenter event\nfinger on a touch surface\nend of a pointer event sequence\nhorizontal axis\nphysical motion matches axis direction\nphysical motion is the inverse of the axis direction\nleave event\npointer motion event\nthe button is pressed\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nrelease the pointer object\nthe button is not pressed\ngiven wl_surface has another role\nset the pointer surface\nvertical axis\na physical wheel rotation\na physical wheel tilt\npointer input device\naxis event\naxis click event\naxis relative physical direction event\naxis source event\naxis stop event\naxis high-resolution scroll event\npointer button event\nenter event\nend of a pointer event sequence\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nleave event\npointer motion event\nGet the opcode number of this message\nGet the opcode number of this message\naxis type\nthe axis stopped with this event\naxis type\naxis type\naxis type\nsource of the axis event\nbutton that produced the event\nphysical direction relative to axis motion\nnumber of steps\nserial number of the enter event\nserial number of the leave event\nserial number of the button event\nphysical state of the button\nsurface entered by the pointer\nsurface left by the pointer\nsurface-local x coordinate\nsurface-local x coordinate\nsurface-local y coordinate\nsurface-local y coordinate\ntimestamp with millisecond granularity\ntimestamp with millisecond granularity\ntimestamp with millisecond granularity\ntimestamp with millisecond granularity\nlength of vector in surface-local coordinate space\nscroll distance as fraction of 120\nsurface-local x coordinate\nsurface-local y coordinate\nserial number of the enter event\npointer surface\nadd rectangle to region\ndestroy region\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nsubtract rectangle from region\nregion interface\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nrectangle height\nrectangle height\nrectangle width\nrectangle width\nregion-local x coordinate\nregion-local x coordinate\nregion-local y coordinate\nregion-local y coordinate\nseat capabilities changed\nseat capability bitmask\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nwl_seat error values\nreturn keyboard object\nreturn pointer object\nreturn touch object\nthe seat has one or more keyboards\nget_pointer, get_keyboard or get_touch called on seat …\nunique identifier for this seat\nthe seat has pointer devices\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nrelease the seat object\nthe seat has touch devices\ngroup of input devices\nGet a flags value with all known bits set.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nGet the underlying bits value.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nseat capabilities changed\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nWhether all set bits in a source flags value are also set …\nThe intersection of a source flags value with the …\nGet a flags value with all bits unset.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from a bits value.\nConvert from a bits value exactly.\nConvert from a bits value, unsetting any unknown bits.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nGet a flags value with the bits of a flag with the given …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nWhether any set bits in a source flags value are also set …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether all known bits in this flags value are set.\nWhether all bits in this flags value are unset.\nYield a set of contained flags values.\nYield a set of contained named flags values.\nunique identifier for this seat\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nGet the opcode number of this message\nGet the opcode number of this message\nThe intersection of a source flags value with the …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\ncapabilities of the seat\nseat identifier\nseat pointer\nseat keyboard\nseat touch interface\ncreate a shell surface from a surface\nThe wire opcode for this request\nThe minimal object version supporting this request\ngiven wl_surface has another role\ncreate desktop-style surfaces\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nshell surface to create\nsurface to be given the shell surface role\nbottom edge\nbottom and left edges\nbottom and right edges\nsuggest resize\nno preference, apply default policy\nswitch output mode to the smallest mode that can fit the …\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nno upscaling, center on output and add black borders to …\ndifferent method to set the surface fullscreen\ndo not set keyboard focus\nleft edge\nstart an interactive move\nno edge\nping client\nrespond to a ping event\npopup interaction is done\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nedge values for resizing\nstart an interactive resize\nright edge\nscale, preserve the surface’s aspect ratio and center on …\nset surface class\nmake the surface a fullscreen surface\nmake the surface a maximized surface\nmake the surface a popup surface\nset surface title\nmake the surface a toplevel surface\nmake the surface a transient surface\ntop edge\ntop and left edges\ntop and right edges\ndetails of transient behaviour\ndesktop-style metadata interface\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nGet the underlying bits value.\nGet the underlying bits value.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nsuggest resize\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nGet the opcode number of this message\nGet the opcode number of this message\nping client\npopup interaction is done\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nhow the surface was resized\nnew height of the surface\nserial number of the ping\nnew width of the surface\nsurface class\nwhich edge or corner is being dragged\ntransient surface behavior\ntransient surface behavior\nframerate in mHz\nmethod for resolving size conflict\noutput on which the surface is to be fullscreen\noutput on which the surface is to be maximized\nparent surface\nparent surface\nseat whose pointer is used\nseat whose pointer is used\nseat whose pointer is used\nserial number of the ping event\nserial number of the implicit grab on the pointer\nserial number of the implicit grab on the pointer\nserial number of the implicit grab on the pointer\nsurface title\nsurface-local x coordinate\nsurface-local x coordinate\nsurface-local y coordinate\nsurface-local y coordinate\n16-bit ABGR 1555 format, [15:0] A:B:G:R 1:5:5:5 little …\n[63:0] A:B:G:R 16:16:16:16 little endian\n[63:0] A:B:G:R 16:16:16:16 little endian\n32-bit ABGR format, [31:0] A:B:G:R 2:10:10:10 little endian\n16-bit ABGR format, [15:0] A:B:G:R 4:4:4:4 little endian\n32-bit ABGR format, [31:0] A:B:G:R 8:8:8:8 little endian\n16-bit ARGB 1555 format, [15:0] A:R:G:B 1:5:5:5 little …\n[63:0] A:R:G:B 16:16:16:16 little endian\n[63:0] A:R:G:B 16:16:16:16 little endian\n32-bit ARGB format, [31:0] A:R:G:B 2:10:10:10 little endian\n16-bit ARGB format, [15:0] A:R:G:B 4:4:4:4 little endian\n32-bit ARGB format, [31:0] A:R:G:B 8:8:8:8 little endian\n[31:0] A:Cr:Cb:Y 8:8:8:8 little endian\n[63:0] A:x:B:x:G:x:R:x 10:6:10:6:10:6:10:6 little endian\npacked AYCbCr format, [31:0] A:Y:Cb:Cr 8:8:8:8 little …\n8-bit BGR format, [7:0] B:G:R 2:3:3\n16-bit BGR 565 format, [15:0] B:G:R 5:6:5 little endian\n24-bit BGR format, [23:0] B:G:R little endian\n32-bit BGRA format, [31:0] B:G:R:A 10:10:10:2 little endian\n16-bit BGRA format, [15:0] B:G:R:A 4:4:4:4 little endian\n16-bit BGRA 5551 format, [15:0] B:G:R:A 5:5:5:1 little …\n32-bit BGRA format, [31:0] B:G:R:A 8:8:8:8 little endian\n32-bit BGRx format, [31:0] B:G:R:x 10:10:10:2 little endian\n16-bit BGRx format, [15:0] B:G:R:x 4:4:4:4 little endian\n16-bit BGRx 5551 format, [15:0] B:G:R:x 5:5:5:1 little …\n32-bit BGRx format, [31:0] B:G:R:x 8:8:8:8 little endian\n[7:0] C0:C1:C2:C3:C4:C5:C6:C7 1:1:1:1:1:1:1:1 eight …\n[7:0] C0:C1:C2:C3 2:2:2:2 four pixels/byte\n[7:0] C0:C1 4:4 two pixels/byte\n8-bit color index format, [7:0] C\ncreate a shm pool\n[7:0] D0:D1:D2:D3:D4:D5:D6:D7 1:1:1:1:1:1:1:1 eight …\n[7:0] D0:D1:D2:D3 2:2:2:2 four pixels/byte\n[7:0] D0:D1 4:4 two pixels/byte\n[7:0] D\nThe wire opcode for this event\nThe minimal object version supporting this event\nwl_shm error values\npixel formats\npixel format description\n[31:0] G:R 16:16 little endian\n[15:0] G:R 8:8 little endian\nmmapping the file descriptor failed\nbuffer format is not known\ninvalid size or stride during pool or buffer creation\n2 plane YCbCr Cr:Cb format, 2x2 subsampled Cr:Cb plane\n2x2 subsampled Cr:Cb plane\n2 plane YCbCr Cr:Cb format, 2x1 subsampled Cr:Cb plane\n2 plane YCbCr Cb:Cr format, 2x2 subsampled Cb:Cr plane\nnon-subsampled Cr:Cb plane\nnon-subsampled Cb:Cr plane\n2 plane YCbCr Cb:Cr format, 2x1 subsampled Cb:Cr plane\n2x2 subsampled Cr:Cb plane 10 bits per channel\n2x2 subsampled Cr:Cb plane 12 bits per channel\n2x2 subsampled Cr:Cb plane 16 bits per channel\n2x2 subsampled Cr:Cb plane 10 bits per channel packed\n2x1 subsampled Cr:Cb plane, 10 bit per channel\n[7:0] R0:R1:R2:R3:R4:R5:R6:R7 1:1:1:1:1:1:1:1 eight …\n[15:0] x:R 6:10 little endian\n[15:0] x:R 4:12 little endian\n[15:0] R little endian\n[7:0] R0:R1:R2:R3 2:2:2:2 four pixels/byte\n[7:0] R0:R1 4:4 two pixels/byte\n[7:0] R\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nrelease the shm object\n[31:0] R:G 16:16 little endian\n[15:0] R:G 8:8 little endian\n8-bit RGB format, [7:0] R:G:B 3:3:2\n16-bit RGB 565 format, [15:0] R:G:B 5:6:5 little endian\n24-bit RGB format, [23:0] R:G:B little endian\n32-bit RGBA format, [31:0] R:G:B:A 10:10:10:2 little endian\n16-bit RBGA format, [15:0] R:G:B:A 4:4:4:4 little endian\n16-bit RGBA 5551 format, [15:0] R:G:B:A 5:5:5:1 little …\n32-bit RGBA format, [31:0] R:G:B:A 8:8:8:8 little endian\n32-bit RGBx format, [31:0] R:G:B:x 10:10:10:2 little endian\n16-bit RGBx format, [15:0] R:G:B:x 4:4:4:4 little endian\n16-bit RGBx 5551 format, [15:0] R:G:B:x 5:5:5:1 little …\n32-bit RGBx format, [31:0] R:G:B:x 8:8:8:8 little endian\npacked YCbCr format, [31:0] Y1:Cr0:Y0:Cb0 8:8:8:8 little …\nY followed by U then V, 10:10:10. Non-linear modifier only\n[23:0] Cr:Cb:Y 8:8:8 little endian\npacked YCbCr format, [31:0] Y1:Cb0:Y0:Cr0 8:8:8:8 little …\nshared memory support\n[63:0] X3:X2:Y3:0:Cr0:0:Y2:0:X1:X0:Y1:0:Cb0:0:Y0:0 …\n[63:0] X3:X2:Y3:Cr0:Y2:X1:X0:Y1:Cb0:Y0 …\n16-bit xBGR 1555 format, [15:0] x:B:G:R 1:5:5:5 little …\n[63:0] x:B:G:R 16:16:16:16 little endian\n[63:0] x:B:G:R 16:16:16:16 little endian\n32-bit xBGR format, [31:0] x:B:G:R 2:10:10:10 little endian\n16-bit xBGR format, [15:0] x:B:G:R 4:4:4:4 little endian\n32-bit xBGR format, [31:0] x:B:G:R 8:8:8:8 little endian\n16-bit xRGB format, [15:0] x:R:G:B 1:5:5:5 little endian\n[63:0] x:R:G:B 16:16:16:16 little endian\n[63:0] x:R:G:B 16:16:16:16 little endian\n32-bit xRGB format, [31:0] x:R:G:B 2:10:10:10 little endian\n16-bit xRGB format, [15:0] x:R:G:B 4:4:4:4 little endian\n32-bit RGB format, [31:0] x:R:G:B 8:8:8:8 little endian\n[31:0] X:Cr:Cb:Y 8:8:8:8 little endian\n[63:0] X:0:Cr:0:Y:0:Cb:0 12:4:12:4:12:4:12:4 little endian\n[63:0] X:Cr:Y:Cb 16:16:16:16 little endian\n[31:0] X:Cr:Y:Cb 2:10:10:10 little endian\n[31:0] X:Y:Cb:Cr 8:8:8:8 little endian\n[63:0] A3:A2:Y3:0:Cr0:0:Y2:0:A1:A0:Y1:0:Cb0:0:Y0:0 …\n[63:0] A3:A2:Y3:Cr0:Y2:A1:A0:Y1:Cb0:Y0 …\n[63:0] Cr0:0:Y1:0:Cb0:0:Y0:0 10:6:10:6:10:6:10:6 little …\n[63:0] Cr0:0:Y1:0:Cb0:0:Y0:0 12:4:12:4:12:4:12:4 little …\n[63:0] Cr0:Y1:Cb0:Y0 16:16:16:16 little endian per 2 Y …\n[31:0] A:Cr:Y:Cb 2:10:10:10 little endian\n[63:0] A:0:Cr:0:Y:0:Cb:0 12:4:12:4:12:4:12:4 little endian\n[63:0] A:Cr:Y:Cb 16:16:16:16 little endian\n3 plane YCbCr format, 4x4 subsampled Cb (1) and Cr (2) …\n3 plane YCbCr format, 4x1 subsampled Cb (1) and Cr (2) …\n3 plane YCbCr format, 2x2 subsampled Cb (1) and Cr (2) …\n3 plane YCbCr format, 2x1 subsampled Cb (1) and Cr (2) …\n3 plane YCbCr format, non-subsampled Cb (1) and Cr (2) …\npacked YCbCr format, [31:0] Cr0:Y1:Cb0:Y0 8:8:8:8 little …\n3 plane YCbCr format, 4x4 subsampled Cr (1) and Cb (2) …\n3 plane YCbCr format, 4x1 subsampled Cr (1) and Cb (2) …\n3 plane YCbCr format, 2x2 subsampled Cr (1) and Cb (2) …\n3 plane YCbCr format, 2x1 subsampled Cr (1) and Cb (2) …\n3 plane YCbCr format, non-subsampled Cr (1) and Cb (2) …\npacked YCbCr format, [31:0] Cb0:Y1:Cr0:Y0 8:8:8:8 little …\npixel format description\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nbuffer pixel format\nfile descriptor for the pool\npool to create\npool size, in bytes\ncreate a buffer from the pool\ndestroy the pool\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nchange the size of the pool mapping\na shared memory pool\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nbuffer pixel format\nbuffer height, in pixels\nbuffer to create\nbuffer byte offset within the pool\nnew size of the pool, in bytes\nnumber of bytes from the beginning of one row to the …\nbuffer width, in pixels\nthe to-be sub-surface parent is invalid\nthe to-be sub-surface is invalid\nunbind from the subcompositor interface\ngive a surface the role sub-surface\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nsub-surface compositing\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nthe new sub-surface object ID\nthe parent surface\nthe surface to be turned into a sub-surface\nwl_surface is not a sibling or the parent\nremove sub-surface interface\nrestack the sub-surface\nrestack the sub-surface\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nset sub-surface to desynchronized mode\nreposition the sub-surface\nset sub-surface to synchronized mode\nsub-surface interface to a wl_surface\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nthe reference surface\nthe reference surface\nx coordinate in the parent surface\ny coordinate in the parent surface\nset the surface contents\ncommit pending surface state\nmark part of the surface damaged\nmark part of the surface damaged using buffer coordinates\nsurface was destroyed before its role object\ndelete surface\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nsurface enters an output\nwl_surface error values\nrequest a frame throttling hint\nbuffer offset is invalid\nbuffer scale value is invalid\nbuffer size is invalid\nbuffer transform value is invalid\nsurface leaves an output\nset the surface contents offset\npreferred buffer scale for the surface\npreferred buffer transform for the surface\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nsets the buffer scaling factor\nsets the buffer transformation\nset input region\nset opaque region\nan onscreen surface\nsurface enters an output\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nsurface leaves an output\nGet the opcode number of this message\nGet the opcode number of this message\npreferred buffer scale for the surface\npreferred buffer transform for the surface\npreferred scaling factor\noutput entered by the surface\noutput left by the surface\npreferred transform\nbuffer of surface contents\ncallback object for the frame request\nheight of damage rectangle\nheight of damage rectangle\nopaque region of the surface\ninput region of the surface\nscale for interpreting buffer contents\ntransform for interpreting buffer contents\nwidth of damage rectangle\nwidth of damage rectangle\nsurface-local x coordinate\nsurface-local x coordinate\nbuffer-local x coordinate\nsurface-local x coordinate\nsurface-local y coordinate\nsurface-local y coordinate\nbuffer-local y coordinate\nsurface-local y coordinate\ntouch session cancelled\ntouch down event and beginning of a touch sequence\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nend of touch frame event\nupdate of touch point coordinates\nupdate orientation of touch point\nThe wire opcode for this request\nThe minimal object version supporting this request\nrelease the touch object\nupdate shape of touch point\nend of a touch event sequence\ntouchscreen input device\ntouch session cancelled\ntouch down event and beginning of a touch sequence\nend of touch frame event\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nupdate of touch point coordinates\nGet the opcode number of this message\nGet the opcode number of this message\nupdate orientation of touch point\nupdate shape of touch point\nend of a touch event sequence\nthe unique ID of this touch point\nthe unique ID of this touch point\nthe unique ID of this touch point\nthe unique ID of this touch point\nthe unique ID of this touch point\nlength of the major axis in surface-local coordinates\nlength of the minor axis in surface-local coordinates\nangle between major axis and positive surface y-axis in …\nserial number of the touch down event\nserial number of the touch up event\nsurface touched\ntimestamp with millisecond granularity\ntimestamp with millisecond granularity\ntimestamp with millisecond granularity\nsurface-local x coordinate\nsurface-local x coordinate\nsurface-local y coordinate\nsurface-local y coordinate")