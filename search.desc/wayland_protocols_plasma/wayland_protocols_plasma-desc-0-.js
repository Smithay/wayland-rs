searchState.loadedDescShard("wayland_protocols_plasma", 0, "This crate provides bindings to the plasma wayland …\nClient-side API of this protocol\nServer-side API of this protocol\nappmenu dbus address interface\nappmenu dbus address interface\nappmenu dbus address interface\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nrelease the appmenu object\ninitialise or update the location of the AppMenu interface\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nrelease the appmenu object\ninitialise or update the location of the AppMenu interface\nappmenu dbus address interface\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\ndestroy the org_kde_kwin_appmenu_manager object\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\ndestroy the org_kde_kwin_appmenu_manager object\nappmenu dbus address interface\nappmenu dbus address interface\nappmenu dbus address interface\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nrelease the appmenu object\ninitialise or update the location of the AppMenu interface\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nappmenu dbus address interface\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\ndestroy the org_kde_kwin_appmenu_manager object\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nClient-side API of this protocol\nServer-side API of this protocol\norg_kde_kwin_blur\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nrelease the blur object\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nrelease the blur object\norg_kde_kwin_blur_manager\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\norg_kde_kwin_blur\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nrelease the blur object\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\norg_kde_kwin_blur_manager\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nClient-side API of this protocol\nServer-side API of this protocol\norg_kde_kwin_contrast\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nrelease the contrast object\nopt into frost effect w/ given colour\nopts out of frost effect\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nrelease the contrast object\nopt into frost effect w/ given colour\nopts out of frost effect\norg_kde_kwin_contrast_manager\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\norg_kde_kwin_contrast\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nrelease the contrast object\nopt into frost effect w/ given colour\nopts out of frost effect\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\norg_kde_kwin_contrast_manager\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nClient-side API of this protocol\nServer-side API of this protocol\nDpms for a wl_output\nOutput dpms manager\nAll changes are pushed\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nEvent indicating used DPMS mode\nDpms for a wl_output\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nrelease the dpms object\nRequest DPMS state change for the wl_output\nEvent indicating whether DPMS is supported on the wl_output\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nrelease the dpms object\nRequest DPMS state change for the wl_output\nThe new currently used mode\nBoolean value whether DPMS is supported (1) for the …\nRequested mode\nGet org_kde_kwin_dpms for wl_output\nOutput dpms manager\nThe wire opcode for this request\nThe minimal object version supporting this request\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet org_kde_kwin_dpms for wl_output\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nDpms for a wl_output\nOutput dpms manager\nAll changes are pushed\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nEvent indicating used DPMS mode\nDpms for a wl_output\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nrelease the dpms object\nRequest DPMS state change for the wl_output\nEvent indicating whether DPMS is supported on the wl_output\nAll changes are pushed\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nEvent indicating used DPMS mode\nGet the opcode number of this message\nGet the opcode number of this message\nEvent indicating whether DPMS is supported on the wl_output\nThe new currently used mode\nBoolean value whether DPMS is supported (1) for the …\nRequested mode\nGet org_kde_kwin_dpms for wl_output\nOutput dpms manager\nThe wire opcode for this request\nThe minimal object version supporting this request\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nClient-side API of this protocol\nServer-side API of this protocol\nbrightness control device\nexternal brightness control\nnotifies the compositor that all relevant identifiers and …\ndestroy the object and unregister the brightness control …\nThe wire opcode for this event\nThe minimal object version supporting this event\nbrightness control device\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nrequests the client to change the brightness to this value\nset the EDID data for identification of the display\nsets whether or not the brightness device belongs to an …\nnotifies the compositor of the maximum brightness that can …\nnotifies the compositor of the brightness that was read …\nnotifies the compositor that all relevant identifiers and …\ndestroy the object and unregister the brightness control …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nset the EDID data for identification of the display\nsets whether or not the brightness device belongs to an …\nnotifies the compositor of the maximum brightness that can …\nnotifies the compositor of the brightness that was read …\nthe value to set the device to\n1 if it’s an internal panel, 0 if not\nbase-64 encoded string of the first 128 bytes of the EDID\nthe maximum value that can be set\nthe observed value that was read\nregisters a brightness device with the compositor\nDestroy the object.\nexternal brightness control\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nregisters a brightness device with the compositor\nDestroy the object.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nbrightness control device\nexternal brightness control\nnotifies the compositor that all relevant identifiers and …\ndestroy the object and unregister the brightness control …\nThe wire opcode for this event\nThe minimal object version supporting this event\nbrightness control device\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nrequests the client to change the brightness to this value\nset the EDID data for identification of the display\nsets whether or not the brightness device belongs to an …\nnotifies the compositor of the maximum brightness that can …\nnotifies the compositor of the brightness that was read …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nrequests the client to change the brightness to this value\nthe value to set the device to\n1 if it’s an internal panel, 0 if not\nbase-64 encoded string of the first 128 bytes of the EDID\nthe maximum value that can be set\nthe observed value that was read\nregisters a brightness device with the compositor\nDestroy the object.\nexternal brightness control\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nClient-side API of this protocol\nServer-side API of this protocol\nFake input manager\nInformation why the client wants to use the interface\nDestroy the fake input device\nOnly available since version 4 of the interface\nFake input manager\nOnly available since version 3 of the interface\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\ntouch cancel event\ntouch down event\ntouch frame event\ntouch motion event\ntouch up event\nInformation why the client wants to use the interface\nDestroy the fake input device\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\ntouch cancel event\ntouch down event\ntouch frame event\ntouch motion event\ntouch up event\nuser visible name of the application\nunique id for touch down event\nunique id for touch motion event\nunique id for touch up event\nreason why the application wants to use this interface\nx coordinate for touch down event\nx coordinate for touch motion event\ny coordinate for touch down event\ny coordinate for touch motion event\nFake input manager\nInformation why the client wants to use the interface\nDestroy the fake input device\nOnly available since version 4 of the interface\nFake input manager\nOnly available since version 3 of the interface\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\ntouch cancel event\ntouch down event\ntouch frame event\ntouch motion event\ntouch up event\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nuser visible name of the application\nunique id for touch down event\nunique id for touch motion event\nunique id for touch up event\nreason why the application wants to use this interface\nx coordinate for touch down event\nx coordinate for touch motion event\ny coordinate for touch down event\ny coordinate for touch motion event\nClient-side API of this protocol\nServer-side API of this protocol\nDisplays a single surface per output\ncompositor is capable of almost any output mode\ncapabilities advertised by the compositor\nadvertises a capability of the compositor\ncenter the surface on the output\ncompositor has a separate cursor plane\nno preference, apply default policy\nThe wire opcode for this event\nThe minimal object version supporting this event\nwl_fullscreen_shell error values\npresent_method is not known\ndifferent method to set the surface fullscreen\npresent surface for display\npresent surface for display at a particular mode\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nrelease the wl_fullscreen_shell interface\nscale the surface to the size of the output ignoring …\nDisplays a single surface per output\nscale the surface, preserving aspect ratio, to the largest …\nscale the surface, preserving aspect ratio, to fully fill …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\npresent surface for display\npresent surface for display at a particular mode\nrelease the wl_fullscreen_shell interface\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nmode switch failed\nmode switch succeeded\nmode switch cancelled\n_wl_fullscreen_shell_mode_feedback\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nDisplays a single surface per output\ncompositor is capable of almost any output mode\ncapabilities advertised by the compositor\nadvertises a capability of the compositor\ncenter the surface on the output\ncompositor has a separate cursor plane\nno preference, apply default policy\nThe wire opcode for this event\nThe minimal object version supporting this event\nwl_fullscreen_shell error values\npresent_method is not known\ndifferent method to set the surface fullscreen\npresent surface for display\npresent surface for display at a particular mode\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nrelease the wl_fullscreen_shell interface\nscale the surface to the size of the output ignoring …\nDisplays a single surface per output\nscale the surface, preserving aspect ratio, to the largest …\nscale the surface, preserving aspect ratio, to fully fill …\nadvertises a capability of the compositor\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nmode switch failed\nmode switch succeeded\nmode switch cancelled\n_wl_fullscreen_shell_mode_feedback\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nmode switch failed\nmode switch succeeded\nGet the opcode number of this message\nGet the opcode number of this message\nmode switch cancelled\nClient-side API of this protocol\nServer-side API of this protocol\nUser idle time manager\nUser idle time manager\nThe wire opcode for this request\nThe minimal object version supporting this request\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nThe idle timeout in msec\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nTriggered when there has not been any user activity in the …\norg_kde_kwin_idle_timeout\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nrelease the timeout object\nTriggered on the first user activity after an idle event\nSimulates user activity for this timeout, behaves just …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nrelease the timeout object\nSimulates user activity for this timeout, behaves just …\nUser idle time manager\nUser idle time manager\nThe wire opcode for this request\nThe minimal object version supporting this request\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nThe idle timeout in msec\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nTriggered when there has not been any user activity in the …\norg_kde_kwin_idle_timeout\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nrelease the timeout object\nTriggered on the first user activity after an idle event\nSimulates user activity for this timeout, behaves just …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nTriggered when there has not been any user activity in the …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nTriggered on the first user activity after an idle event\nClient-side API of this protocol\nServer-side API of this protocol\nKey States\nThis is a destructor, once sent this object cannot be used …\nThe wire opcode for this event\nThe minimal object version supporting this event\nKey States\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nUpdates the state for a said key\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nKey States\nThis is a destructor, once received this object cannot be …\nThe wire opcode for this event\nThe minimal object version supporting this event\nKey States\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nUpdates the state for a said key\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nUpdates the state for a said key\nClient-side API of this protocol\nServer-side API of this protocol\nAllow surfaces over the lockscreen\nTell about which surface could be raised above the …\nDestroy the kde_lockscreen_overlay_v1\nthe client provided an invalid surface state\nAllow surfaces over the lockscreen\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nTell about which surface could be raised above the …\nDestroy the kde_lockscreen_overlay_v1\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nAllow surfaces over the lockscreen\nTell about which surface could be raised above the …\nDestroy the kde_lockscreen_overlay_v1\nthe client provided an invalid surface state\nAllow surfaces over the lockscreen\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nClient-side API of this protocol\nServer-side API of this protocol\noutput configuration representation\ncapability flags\ndescribes capabilities of the outputdevice\noutput color curves\nindicates this is the current mode\nsent all information about output\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nadvertise EDID data for the output\nEISA ID\noutput is enabled or disabled\ndescribes enabled state\ngeometric properties of the output\nmode information\nadvertise available output modes and current one\noutput configuration representation\noverscan\nif this outputdevice can use overscan\nindicates this is the preferred mode\noutput scaling properties\noutput scaling properties\nSerial Number\nsubpixel geometry information\ntransform from framebuffer to output\nA unique id for this outputdevice\nif this outputdevice supports variable refresh rate\ndescribes vrr policy\nVariable Refresh Rate Policy\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nGet the underlying bits value.\nGet the underlying bits value.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nGet the opcode number of this message\nGet the opcode number of this message\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nblue color ramp\ntextual representation of EISA identifier\noutput enabled state\nscaling factor of output\nscaling factor of output\nbitfield of mode flags\ngreen color ramp\nheight of the mode in hardware units\ntextual description of the manufacturer\nPer outputdevice unique id to identify a mode\ntextual description of the model\namount of overscan of the monitor\nheight in millimeters of the output\nwidth in millimeters of the output\nbase64-encoded EDID string\nred color ramp\nvertical refresh rate in mHz\ntextual representation of serial number\nsubpixel orientation of the output\ntransform that maps framebuffer to output\noutput devices ID\nwidth of the mode in hardware units\nx position within the global compositor space\ny position within the global compositor space\noutput configuration representation\ncapability flags\ndescribes capabilities of the outputdevice\noutput color curves\nindicates this is the current mode\nsent all information about output\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nadvertise EDID data for the output\nEISA ID\noutput is enabled or disabled\ndescribes enabled state\ngeometric properties of the output\nmode information\nadvertise available output modes and current one\noutput configuration representation\noverscan\nif this outputdevice can use overscan\nindicates this is the preferred mode\noutput scaling properties\noutput scaling properties\nSerial Number\nsubpixel geometry information\ntransform from framebuffer to output\nA unique id for this outputdevice\nif this outputdevice supports variable refresh rate\ndescribes vrr policy\nVariable Refresh Rate Policy\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nGet the underlying bits value.\nGet the underlying bits value.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\ncapability flags\noutput color curves\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nsent all information about output\nadvertise EDID data for the output\nEISA ID\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\noutput is enabled or disabled\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\ngeometric properties of the output\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nadvertise available output modes and current one\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nGet the opcode number of this message\nGet the opcode number of this message\noverscan\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\noutput scaling properties\noutput scaling properties\nSerial Number\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nA unique id for this outputdevice\nVariable Refresh Rate Policy\nblue color ramp\ntextual representation of EISA identifier\noutput enabled state\nscaling factor of output\nscaling factor of output\nbitfield of mode flags\ngreen color ramp\nheight of the mode in hardware units\ntextual description of the manufacturer\nPer outputdevice unique id to identify a mode\ntextual description of the model\namount of overscan of the monitor\nheight in millimeters of the output\nwidth in millimeters of the output\nbase64-encoded EDID string\nred color ramp\nvertical refresh rate in mHz\ntextual representation of serial number\nsubpixel orientation of the output\ntransform that maps framebuffer to output\noutput devices ID\nwidth of the mode in hardware units\nx position within the global compositor space\ny position within the global compositor space\nClient-side API of this protocol\nServer-side API of this protocol\noutput mode\noutput configuration representation\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\noutput mode\nmode is preferred\nmode refresh rate\nthe mode has been destroyed\nmode size\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nheight of the mode in hardware units\nvertical refresh rate in mHz\nwidth of the mode in hardware units\nprefer accuracy\nif this outputdevice supports autorotation\ndescribes when auto rotate should be used\ndescribes when auto rotate is used\nbrightness multiplier\nif this outputdevice supports the brightness setting\nmetadata about the screen’s brightness limits\noverrides for the screen’s brightness limits\ncapability flags\ndescribes capabilities of the outputdevice\ntradeoff between power and accuracy\nthe preferred color/power tradeoff\nwhich source the compositor should use for the color …\ndescribes which source the compositor uses for the color …\ncurrent mode\ndimming multiplier\nsent all information about output\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nadvertise EDID data for the output\nprefer efficiency and performance\nEISA ID\noutput is enabled or disabled\ngeometric properties of the output\nif HDR is enabled\nif this outputdevice supports high dynamic range\nif this outputdevice supports icc profiles\ndescribes when auto rotate is used\noutput configuration representation\nadvertise available output modes and current one\nOutput’s name\noverscan\nif this output_device can use overscan\ndescribes RGB range policy\nRGB range\nif setting the rgb range is possible\noutput scaling properties\nthe brightness of sdr if hdr is enabled\ndescribes which gamut is assumed for sRGB applications\nSerial Number\nsubpixel geometry information\ntransform from framebuffer to output\nA unique id for this outputdevice\nif this outputdevice supports variable refresh rate\ndescribes vrr policy\nVariable Refresh Rate Policy\nif WCG is enabled\nif this outputdevice supports a wide color gamut\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nGet the underlying bits value.\nGet the underlying bits value.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nGet the opcode number of this message\nGet the opcode number of this message\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nbrightness in 0-10000\ntextual representation of EISA identifier\noutput enabled state\nscaling factor of output\n0 means rec.709 primaries, 10000 means native primaries\n1 if enabled, 0 if disabled\ntextual description of the manufacturer\n-1 for no override, positive values are the brightness in …\nin nits\nin nits\n-1 for no override, positive values are the brightness in …\nin 0.0001 nits\n-1 for no override, positive values are the brightness in …\ntextual description of the model\nmultiplier in 0-10000\namount of overscan of the monitor\nheight in millimeters of the output\nwidth in millimeters of the output\nbase64-encoded EDID string\ntextual representation of serial number\nsubpixel orientation of the output\ntransform that maps framebuffer to output\noutput devices ID\n1 if enabled, 0 if disabled\nx position within the global compositor space\ny position within the global compositor space\noutput mode\noutput configuration representation\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\noutput mode\nmode is preferred\nmode refresh rate\nthe mode has been destroyed\nmode size\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nmode is preferred\nmode refresh rate\nthe mode has been destroyed\nmode size\nheight of the mode in hardware units\nvertical refresh rate in mHz\nwidth of the mode in hardware units\nprefer accuracy\nif this outputdevice supports autorotation\ndescribes when auto rotate should be used\ndescribes when auto rotate is used\nbrightness multiplier\nif this outputdevice supports the brightness setting\nmetadata about the screen’s brightness limits\noverrides for the screen’s brightness limits\ncapability flags\ndescribes capabilities of the outputdevice\ntradeoff between power and accuracy\nthe preferred color/power tradeoff\nwhich source the compositor should use for the color …\ndescribes which source the compositor uses for the color …\ncurrent mode\ndimming multiplier\nsent all information about output\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nadvertise EDID data for the output\nprefer efficiency and performance\nEISA ID\noutput is enabled or disabled\ngeometric properties of the output\nif HDR is enabled\nif this outputdevice supports high dynamic range\nif this outputdevice supports icc profiles\ndescribes when auto rotate is used\noutput configuration representation\nadvertise available output modes and current one\nOutput’s name\noverscan\nif this output_device can use overscan\ndescribes RGB range policy\nRGB range\nif setting the rgb range is possible\noutput scaling properties\nthe brightness of sdr if hdr is enabled\ndescribes which gamut is assumed for sRGB applications\nSerial Number\nsubpixel geometry information\ntransform from framebuffer to output\nA unique id for this outputdevice\nif this outputdevice supports variable refresh rate\ndescribes vrr policy\nVariable Refresh Rate Policy\nif WCG is enabled\nif this outputdevice supports a wide color gamut\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\ndescribes when auto rotate is used\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nGet the underlying bits value.\nGet the underlying bits value.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nbrightness multiplier\nmetadata about the screen’s brightness limits\noverrides for the screen’s brightness limits\ncapability flags\nthe preferred color/power tradeoff\ndescribes which source the compositor uses for the color …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\ncurrent mode\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\ndimming multiplier\nsent all information about output\nadvertise EDID data for the output\nEISA ID\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\noutput is enabled or disabled\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\ngeometric properties of the output\nif HDR is enabled\ndescribes when auto rotate is used\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nadvertise available output modes and current one\nOutput’s name\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nGet the opcode number of this message\nGet the opcode number of this message\noverscan\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nRGB range\noutput scaling properties\nthe brightness of sdr if hdr is enabled\ndescribes which gamut is assumed for sRGB applications\nSerial Number\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nA unique id for this outputdevice\nVariable Refresh Rate Policy\nif WCG is enabled\nbrightness in 0-10000\ntextual representation of EISA identifier\noutput enabled state\nscaling factor of output\n0 means rec.709 primaries, 10000 means native primaries\n1 if enabled, 0 if disabled\ntextual description of the manufacturer\n-1 for no override, positive values are the brightness in …\nin nits\nin nits\n-1 for no override, positive values are the brightness in …\nin 0.0001 nits\n-1 for no override, positive values are the brightness in …\ntextual description of the model\nmultiplier in 0-10000\namount of overscan of the monitor\nheight in millimeters of the output\nwidth in millimeters of the output\nbase64-encoded EDID string\ntextual representation of serial number\nsubpixel orientation of the output\ntransform that maps framebuffer to output\noutput devices ID\n1 if enabled, 0 if disabled\nx position within the global compositor space\ny position within the global compositor space\nClient-side API of this protocol\nServer-side API of this protocol\nconfigure single output devices\nconfiguration of server outputs through clients\nconfiguration changes have been applied\napply configuration changes to all output devices\nset output color curves\nrelease the outputconfiguration object\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nenable or disable an output\nconfiguration changes failed to apply\nswitch outputdevice to mode\nconfigure single output devices\nset overscan value\nposition output in global space\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nset scaling factor of this output\nset scaling factor of this output\nset the VRR policy\ntransform outputdevice\ndescribes vrr policy\napply configuration changes to all output devices\nset output color curves\nrelease the outputconfiguration object\nenable or disable an output\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nswitch outputdevice to mode\nGet the opcode number of this message\nGet the opcode number of this message\nset overscan value\nposition output in global space\nset scaling factor of this output\nset scaling factor of this output\nset the VRR policy\ntransform outputdevice\nblue color ramp\n1 to enable or 0 to disable this output\ngreen color ramp\naspired mode’s id\noutputdevice to be en- or disabled\noutputdevice this mode change applies to\noutputdevice this transformation change applies to\noutputdevice this position applies to\noutputdevice this mode change applies to\noutputdevice this mode change applies to\noutputdevice curves apply to\noutputdevice overscan applies to\noutputdevice this VRR policy applies to\noverscan value\nthe vrr policy to apply\nred color ramp\nscaling factor\nscaling factor\ntransform enum\nposition on the x-axis\nposition on the y-axis\nprovide outputconfiguration object for configuring outputs\nconfiguration of server outputs through clients\nThe wire opcode for this request\nThe minimal object version supporting this request\nprovide outputconfiguration object for configuring outputs\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nconfigure single output devices\nconfiguration of server outputs through clients\nconfiguration changes have been applied\napply configuration changes to all output devices\nset output color curves\nrelease the outputconfiguration object\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nenable or disable an output\nconfiguration changes failed to apply\nswitch outputdevice to mode\nconfigure single output devices\nset overscan value\nposition output in global space\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nset scaling factor of this output\nset scaling factor of this output\nset the VRR policy\ntransform outputdevice\ndescribes vrr policy\nconfiguration changes have been applied\nconfiguration changes failed to apply\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nblue color ramp\n1 to enable or 0 to disable this output\ngreen color ramp\naspired mode’s id\noutputdevice to be en- or disabled\noutputdevice this mode change applies to\noutputdevice this transformation change applies to\noutputdevice this position applies to\noutputdevice this mode change applies to\noutputdevice this mode change applies to\noutputdevice curves apply to\noutputdevice overscan applies to\noutputdevice this VRR policy applies to\noverscan value\nthe vrr policy to apply\nred color ramp\nscaling factor\nscaling factor\ntransform enum\nposition on the x-axis\nposition on the y-axis\nprovide outputconfiguration object for configuring outputs\nconfiguration of server outputs through clients\nThe wire opcode for this request\nThe minimal object version supporting this request\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nClient-side API of this protocol\nServer-side API of this protocol\nconfigure single output devices\nconfiguration of server outputs through clients\nprefer accuracy\nthe config is already applied\nconfiguration changes have been applied\napply configuration changes to all output devices\ndescribes when auto rotate should be used\ntradeoff between power and accuracy\nwhich source the compositor should use for the color …\nrelease the outputconfiguration object\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nprefer efficiency and performance\nenable or disable an output\nkde_output_configuration_v2 error values\nconfiguration changes failed to apply\nreason for failure\nconfigure single output devices\nswitch output-device to mode\nset overscan value\nposition output in global space\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\ndescribes RGB range policy\nset scaling factor of this output\nchange when auto rotate should be used\nbrightness multiplier\noverride metadata about the screen’s brightness limits\nset the preferred color/power tradeoff\nwhich source the compositor should use for the color …\ndimming multiplier\nchange if HDR should be enabled\nchange the used icc profile\nSelect which primary output to use\nSet the order of outputs\nRGB range\nset the brightness for sdr content\ndescribes which gamut is assumed for sRGB applications\nset the VRR policy\nchange if a wide color gamut should be used\ntransform output-device\ndescribes vrr policy\napply configuration changes to all output devices\nrelease the outputconfiguration object\nenable or disable an output\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nswitch output-device to mode\nGet the opcode number of this message\nGet the opcode number of this message\nset overscan value\nposition output in global space\nset scaling factor of this output\nchange when auto rotate should be used\nbrightness multiplier\noverride metadata about the screen’s brightness limits\nset the preferred color/power tradeoff\nwhich source the compositor should use for the color …\ndimming multiplier\nchange if HDR should be enabled\nchange the used icc profile\nSelect which primary output to use\nSet the order of outputs\nRGB range\nset the brightness for sdr content\ndescribes which gamut is assumed for sRGB applications\nset the VRR policy\nchange if a wide color gamut should be used\ntransform output-device\nreason for failure\nbrightness in 0-10000\nthe color profile source\n1 to enable or 0 to disable this output\n1 to enable, 0 to disable hdr\n1 to enable, 0 to disable wcg\n0 means rec.709 primaries, 10000 means native primaries\n-1 for not overriding, or positive values in nits\n-1 for not overriding, or positive values in nits\n-1 for not overriding, or positive values in 0.0001 nits\nthe mode to apply\nmultiplier in 0-10000\noutputdevice to be en- or disabled\noutputdevice this mode change applies to\noutputdevice this transformation change applies to\noutputdevice this position applies to\noutputdevice this scale change applies to\noutputdevice overscan applies to\noutputdevice this VRR policy applies to\noutputdevice the rgb range applies to\noutputdevice the index applies to\noutputdevice this setting applies to\noutputdevice this setting applies to\noutputdevice this setting applies to\noutputdevice this setting applies to\noutputdevice this setting applies to\noutputdevice this setting applies to\noutputdevice this setting applies to\noutputdevice this setting applies to\noutputdevice this setting applies to\noutputdevice this setting applies to\noutputdevice this setting applies to\noverscan value\nthe vrr policy to apply\nthe priority of the output\nscaling factor\ntransform enum\nposition on the x-axis\nposition on the y-axis\nprovide outputconfiguration object for configuring outputs\nconfiguration of server outputs through clients\nThe wire opcode for this request\nThe minimal object version supporting this request\nprovide outputconfiguration object for configuring outputs\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nconfigure single output devices\nconfiguration of server outputs through clients\nprefer accuracy\nthe config is already applied\nconfiguration changes have been applied\napply configuration changes to all output devices\ndescribes when auto rotate should be used\ntradeoff between power and accuracy\nwhich source the compositor should use for the color …\nrelease the outputconfiguration object\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nprefer efficiency and performance\nenable or disable an output\nkde_output_configuration_v2 error values\nconfiguration changes failed to apply\nreason for failure\nconfigure single output devices\nswitch output-device to mode\nset overscan value\nposition output in global space\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\ndescribes RGB range policy\nset scaling factor of this output\nchange when auto rotate should be used\nbrightness multiplier\noverride metadata about the screen’s brightness limits\nset the preferred color/power tradeoff\nwhich source the compositor should use for the color …\ndimming multiplier\nchange if HDR should be enabled\nchange the used icc profile\nSelect which primary output to use\nSet the order of outputs\nRGB range\nset the brightness for sdr content\ndescribes which gamut is assumed for sRGB applications\nset the VRR policy\nchange if a wide color gamut should be used\ntransform output-device\ndescribes vrr policy\nconfiguration changes have been applied\nconfiguration changes failed to apply\nreason for failure\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nreason for failure\nbrightness in 0-10000\nthe color profile source\n1 to enable or 0 to disable this output\n1 to enable, 0 to disable hdr\n1 to enable, 0 to disable wcg\n0 means rec.709 primaries, 10000 means native primaries\n-1 for not overriding, or positive values in nits\n-1 for not overriding, or positive values in nits\n-1 for not overriding, or positive values in 0.0001 nits\nthe mode to apply\nmultiplier in 0-10000\noutputdevice to be en- or disabled\noutputdevice this mode change applies to\noutputdevice this transformation change applies to\noutputdevice this position applies to\noutputdevice this scale change applies to\noutputdevice overscan applies to\noutputdevice this VRR policy applies to\noutputdevice the rgb range applies to\noutputdevice the index applies to\noutputdevice this setting applies to\noutputdevice this setting applies to\noutputdevice this setting applies to\noutputdevice this setting applies to\noutputdevice this setting applies to\noutputdevice this setting applies to\noutputdevice this setting applies to\noutputdevice this setting applies to\noutputdevice this setting applies to\noutputdevice this setting applies to\noutputdevice this setting applies to\noverscan value\nthe vrr policy to apply\nthe priority of the output\nscaling factor\ntransform enum\nposition on the x-axis\nposition on the y-axis\nprovide outputconfiguration object for configuring outputs\nconfiguration of server outputs through clients\nThe wire opcode for this request\nThe minimal object version supporting this request\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nClient-side API of this protocol\nServer-side API of this protocol\nannounce order of outputs\nDestroy the output order notifier.\ndone\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nannounce order of outputs\noutput name\nThe wire opcode for this request\nThe minimal object version supporting this request\nDestroy the output order notifier.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nthe name of the output\nannounce order of outputs\nDestroy the output order notifier.\ndone\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nannounce order of outputs\noutput name\nThe wire opcode for this request\nThe minimal object version supporting this request\ndone\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\noutput name\nthe name of the output\nClient-side API of this protocol\nServer-side API of this protocol\ncreate shell windows and helpers\nmetadata interface\ncreate a shell surface from a surface\ncreate shell windows and helpers\nThe wire opcode for this request\nThe minimal object version supporting this request\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\ncreate a shell surface from a surface\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nnormal panel visibility\nAuto-hiding panel is hidden\nAuto-hiding panel is shown\nhide automatically\nremove org_kde_plasma_surface interface\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nopen under cursor\nmetadata interface\nHide the auto-hiding panel\nShow the auto-hiding panel\nBehavior for panel surface\nRequest panel_auto_hide performed on a surface which does …\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nassign an output to this shell surface\nset or unset the panel\nWhether a panel takes focus\nchange the shell surface position\nassign a role to this surface\nmake the window not appear in a switcher\nmake the window skip the taskbar\nwindows can cover\nwindows go below\nremove org_kde_plasma_surface interface\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nopen under cursor\nHide the auto-hiding panel\nShow the auto-hiding panel\nassign an output to this shell surface\nset or unset the panel\nWhether a panel takes focus\nchange the shell surface position\nassign a role to this surface\nmake the window not appear in a switcher\nmake the window skip the taskbar\npanel_behavior enum value\nBoolean value that sets whether to skip the taskbar\nBoolean value that sets whether to skip the window …\nBoolean value that sets whether the panel takes focus\nx coordinate in global space\ny coordinate in global space\ncreate shell windows and helpers\nmetadata interface\ncreate a shell surface from a surface\ncreate shell windows and helpers\nThe wire opcode for this request\nThe minimal object version supporting this request\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nnormal panel visibility\nAuto-hiding panel is hidden\nAuto-hiding panel is shown\nhide automatically\nremove org_kde_plasma_surface interface\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nopen under cursor\nmetadata interface\nHide the auto-hiding panel\nShow the auto-hiding panel\nBehavior for panel surface\nRequest panel_auto_hide performed on a surface which does …\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nassign an output to this shell surface\nset or unset the panel\nWhether a panel takes focus\nchange the shell surface position\nassign a role to this surface\nmake the window not appear in a switcher\nmake the window skip the taskbar\nwindows can cover\nwindows go below\nAuto-hiding panel is hidden\nAuto-hiding panel is shown\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\npanel_behavior enum value\nBoolean value that sets whether to skip the taskbar\nBoolean value that sets whether to skip the window …\nBoolean value that sets whether the panel takes focus\nx coordinate in global space\ny coordinate in global space\nClient-side API of this protocol\nServer-side API of this protocol\nThe desktop has been activated\nThis desktop is no longer active\nThe desktop got an id\nsent all information about desktops\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\norg_kde_plasma_virtual_desktop\nThe wire opcode for this request\nThe minimal object version supporting this request\nThis desktop has been removed\nRequests this desktop to be activated\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nRequests this desktop to be activated\nUnique id of the desktop\nUser readable descriptive name for the desktop\nEmitted when a new desktop has been created\nEmitted when a desktop has been removed\nsent all information about desktops\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nget the org_kde_plasma_virtual_desktop interface for a …\norg_kde_plasma_virtual_desktop_management\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nask for the creation of a new desktop at a specified …\nask for a desktop removal identified by id\nOnly available since version 2 of the interface\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nget the org_kde_plasma_virtual_desktop interface for a …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nask for the creation of a new desktop at a specified …\nask for a desktop removal identified by id\nUnique id of the desktop\nUnique id of the desktop\nPosition of this desktop, to ensure the client and the …\nNumber of rows the virtual desktops are laid out into.\nUnique id of the desktop\nUnique id of the desktop\nThe user readable name we want for the desktop\nThe position we want for the desktop\nThe desktop has been activated\nThis desktop is no longer active\nThe desktop got an id\nsent all information about desktops\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\norg_kde_plasma_virtual_desktop\nThe wire opcode for this request\nThe minimal object version supporting this request\nThis desktop has been removed\nRequests this desktop to be activated\nThe desktop has been activated\nThis desktop is no longer active\nThe desktop got an id\nsent all information about desktops\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nThis desktop has been removed\nUnique id of the desktop\nUser readable descriptive name for the desktop\nEmitted when a new desktop has been created\nEmitted when a desktop has been removed\nsent all information about desktops\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nget the org_kde_plasma_virtual_desktop interface for a …\norg_kde_plasma_virtual_desktop_management\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nask for the creation of a new desktop at a specified …\nask for a desktop removal identified by id\nOnly available since version 2 of the interface\nEmitted when a new desktop has been created\nEmitted when a desktop has been removed\nsent all information about desktops\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nUnique id of the desktop\nUnique id of the desktop\nPosition of this desktop, to ensure the client and the …\nNumber of rows the virtual desktops are laid out into.\nUnique id of the desktop\nUnique id of the desktop\nThe user readable name we want for the desktop\nThe position we want for the desktop\nClient-side API of this protocol\nServer-side API of this protocol\nactivation feedback\nhelper object for sending the stacking order\ninterface to control application windows\napplication windows management\nOffers the app_id\ndestroy the org_kde_plasma_activation object\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nNotifies about activation finished, either by activation …\norg_kde_plasma_activation\nThe wire opcode for this request\nThe minimal object version supporting this request\ndestroy the org_kde_plasma_activation object\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\napplication id, as described in xdg_activation_v1\nnotify that an app is starting\ndestroy the activation manager object\nThe wire opcode for this event\nThe minimal object version supporting this event\nactivation feedback\nThe wire opcode for this request\nThe minimal object version supporting this request\ndestroy the activation manager object\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nmarks the end of the list\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nhelper object for sending the stacking order\na window in the stacking order list\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nwindow uuid\nthe window entered an activity\nthe window left an activity\napplication identifier has been changed\nnotify the client that the current appmenu changed\nThe client geometry (i.e. without decorations etc) of this …\nclose window\nremove resource for the org_kde_plasma_window\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe geometry of this window in absolute coordinates\nRequests to get the window icon\nThe icon of the window changed\nAll initial known state is submitted\ninterface to control application windows\nThe parent window changed\nprocess id of application owning the window has changed\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nmap window on an activity\nmap window on a virtual desktop\nmap window on a virtual desktop\nremove a window from an activity\nremove a window from a virtual desktop\nrequest move\nrequest resize\nX11 resource name has changed\nsend window to specified output\nset the geometry for a taskbar entry\nset window state\nmap window on a virtual desktop\nwindow state has been changed\nwindow’s icon name changed\nwindow title has been changed\nwindow’s surface was unmapped\nset the geometry for a taskbar entry\nwindow was moved to another workspace\nthe window entered a new virtual desktop\nthe window left a virtual desktop\nclose window\nremove resource for the org_kde_plasma_window\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nRequests to get the window icon\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nmap window on an activity\nmap window on a virtual desktop\nmap window on a virtual desktop\nremove a window from an activity\nremove a window from a virtual desktop\nrequest move\nrequest resize\nsend window to specified output\nset the geometry for a taskbar entry\nset window state\nmap window on a virtual desktop\nset the geometry for a taskbar entry\nbitfield of state flags\nheight of the org_kde_plasma_window\nheight of the org_kde_plasma_window\ndesktop id\nactivity id\nactivity id\ndesktop id\nthe new themed icon name\nzero based virtual desktop number\nThe parent window\nprocess id\nresource name\nwindow title\nwidth of the org_kde_plasma_window\nwidth of the org_kde_plasma_window\nx position of the org_kde_plasma_window\nx position of the org_kde_plasma_window\ny position of the org_kde_plasma_window\ny position of the org_kde_plasma_window\nfile descriptor for the icon\nbitfield of set state flags\ndesktop id\ndesktop id\nactivity id\nactivity id\nzero based virtual desktop number\nbitfield of state flags\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nget the stacking order\ndeprecated\nOnly available since version 12 of the interface\napplication windows management\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nshow/hide the desktop\nnotify the client when the show desktop mode is …\nnotify the client when stacking order changed\nnotify the client when stacking order changed\nnotify the client when stacking order changed\nnotify the client that a window was mapped\nnotify the client that a window was mapped\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nget the stacking order\ndeprecated\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nshow/hide the desktop\nDeprecated: internal window Id\nDeprecated: internal window Id\ninternal windows id array\nnew state\ninternal window uuid\ninternal windows id ;-separated\nThe internal window id of the window to create\nThe internal window uuiid of the window to create\nrequested state\nactivation feedback\nhelper object for sending the stacking order\ninterface to control application windows\napplication windows management\nOffers the app_id\ndestroy the org_kde_plasma_activation object\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nNotifies about activation finished, either by activation …\norg_kde_plasma_activation\nThe wire opcode for this request\nThe minimal object version supporting this request\nOffers the app_id\nNotifies about activation finished, either by activation …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\napplication id, as described in xdg_activation_v1\nnotify that an app is starting\ndestroy the activation manager object\nThe wire opcode for this event\nThe minimal object version supporting this event\nactivation feedback\nThe wire opcode for this request\nThe minimal object version supporting this request\nnotify that an app is starting\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nmarks the end of the list\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nhelper object for sending the stacking order\na window in the stacking order list\nmarks the end of the list\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\na window in the stacking order list\nwindow uuid\nthe window entered an activity\nthe window left an activity\napplication identifier has been changed\nnotify the client that the current appmenu changed\nThe client geometry (i.e. without decorations etc) of this …\nclose window\nremove resource for the org_kde_plasma_window\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe geometry of this window in absolute coordinates\nRequests to get the window icon\nThe icon of the window changed\nAll initial known state is submitted\ninterface to control application windows\nThe parent window changed\nprocess id of application owning the window has changed\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nmap window on an activity\nmap window on a virtual desktop\nmap window on a virtual desktop\nremove a window from an activity\nremove a window from a virtual desktop\nrequest move\nrequest resize\nX11 resource name has changed\nsend window to specified output\nset the geometry for a taskbar entry\nset window state\nmap window on a virtual desktop\nwindow state has been changed\nwindow’s icon name changed\nwindow title has been changed\nwindow’s surface was unmapped\nset the geometry for a taskbar entry\nwindow was moved to another workspace\nthe window entered a new virtual desktop\nthe window left a virtual desktop\nthe window entered an activity\nthe window left an activity\napplication identifier has been changed\nnotify the client that the current appmenu changed\nThe client geometry (i.e. without decorations etc) of this …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe geometry of this window in absolute coordinates\nThe icon of the window changed\nAll initial known state is submitted\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nThe parent window changed\nprocess id of application owning the window has changed\nX11 resource name has changed\nwindow state has been changed\nwindow’s icon name changed\nwindow title has been changed\nwindow’s surface was unmapped\nwindow was moved to another workspace\nthe window entered a new virtual desktop\nthe window left a virtual desktop\nbitfield of state flags\nheight of the org_kde_plasma_window\nheight of the org_kde_plasma_window\ndesktop id\nactivity id\nactivity id\ndesktop id\nthe new themed icon name\nzero based virtual desktop number\nThe parent window\nprocess id\nresource name\nwindow title\nwidth of the org_kde_plasma_window\nwidth of the org_kde_plasma_window\nx position of the org_kde_plasma_window\nx position of the org_kde_plasma_window\ny position of the org_kde_plasma_window\ny position of the org_kde_plasma_window\nfile descriptor for the icon\nbitfield of set state flags\ndesktop id\ndesktop id\nactivity id\nactivity id\nzero based virtual desktop number\nbitfield of state flags\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nget the stacking order\ndeprecated\nOnly available since version 12 of the interface\napplication windows management\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nshow/hide the desktop\nnotify the client when the show desktop mode is …\nnotify the client when stacking order changed\nnotify the client when stacking order changed\nnotify the client when stacking order changed\nnotify the client that a window was mapped\nnotify the client that a window was mapped\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nnotify the client when the show desktop mode is …\nnotify the client when stacking order changed\nnotify the client when stacking order changed\nnotify the client when stacking order changed\nnotify the client that a window was mapped\nnotify the client that a window was mapped\nDeprecated: internal window Id\nDeprecated: internal window Id\ninternal windows id array\nnew state\ninternal window uuid\ninternal windows id ;-separated\nThe internal window id of the window to create\nThe internal window uuiid of the window to create\nrequested state\nClient-side API of this protocol\nServer-side API of this protocol\nexpose which is the primary display\nDestroy the primary output notifier.\nThe wire opcode for this event\nThe minimal object version supporting this event\nexpose which is the primary display\nProvide the current primary output’s name\nThe wire opcode for this request\nThe minimal object version supporting this request\nDestroy the primary output notifier.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nthe name of the output\nexpose which is the primary display\nDestroy the primary output notifier.\nThe wire opcode for this event\nThe minimal object version supporting this event\nexpose which is the primary display\nProvide the current primary output’s name\nThe wire opcode for this request\nThe minimal object version supporting this request\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nProvide the current primary output’s name\nthe name of the output\nClient-side API of this protocol\nServer-side API of this protocol\nProtocol for managing rendered GBM buffers passing\nThis interface allows finer control of remote buffer …\nSignals about buffer ready to be consumed by clients\nThe wire opcode for this event\nThe minimal object version supporting this event\nAnswer on buffer_ready event, retrieves new buffer from …\nProtocol for managing rendered GBM buffers passing\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nrelease org_kde_kwin_remote_access_manager interface\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nAnswer on buffer_ready event, retrieves new buffer from …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nrelease org_kde_kwin_remote_access_manager interface\nunique id of created buffer (you can use server-side fd …\nscreen that this buffer belongs to\nThe internal buffer id of the buffer to create\nThe wire opcode for this event\nThe minimal object version supporting this event\nThis is sent after binding to remote access manager\nThis interface allows finer control of remote buffer …\nThe wire opcode for this request\nThe minimal object version supporting this request\nThis request comes once client no longer needs this buffer.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nThis request comes once client no longer needs this buffer.\nProtocol for managing rendered GBM buffers passing\nThis interface allows finer control of remote buffer …\nSignals about buffer ready to be consumed by clients\nThe wire opcode for this event\nThe minimal object version supporting this event\nAnswer on buffer_ready event, retrieves new buffer from …\nProtocol for managing rendered GBM buffers passing\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nrelease org_kde_kwin_remote_access_manager interface\nSignals about buffer ready to be consumed by clients\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nunique id of created buffer (you can use server-side fd …\nscreen that this buffer belongs to\nThe internal buffer id of the buffer to create\nThe wire opcode for this event\nThe minimal object version supporting this event\nThis is sent after binding to remote access manager\nThis interface allows finer control of remote buffer …\nThe wire opcode for this request\nThe minimal object version supporting this request\nThis request comes once client no longer needs this buffer.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nThis is sent after binding to remote access manager\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nClient-side API of this protocol\nServer-side API of this protocol\nauto hide screen edge\nscreen edge manager\nactivate the screen edge\ndeactivate the screen edge\ndestroy the auto hide screen edge object\nauto hide screen edge\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nactivate the screen edge\ndeactivate the screen edge\ndestroy the auto hide screen edge object\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nthe surface already has a screen edge\nscreen border\nbottom screen edge\ndestroy the screen edge manager\ncreate an auto hide edge\nthe specified border value is invalid\nthe surface has invalid role\nscreen edge manager\nleft screen edge\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nright screen edge\ntop screen edge\ndestroy the screen edge manager\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\ncreate an auto hide edge\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nthe associated screen border\nthe surface\nauto hide screen edge\nscreen edge manager\nactivate the screen edge\ndeactivate the screen edge\ndestroy the auto hide screen edge object\nauto hide screen edge\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nthe surface already has a screen edge\nscreen border\nbottom screen edge\ndestroy the screen edge manager\ncreate an auto hide edge\nthe specified border value is invalid\nthe surface has invalid role\nscreen edge manager\nleft screen edge\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nright screen edge\ntop screen edge\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nthe associated screen border\nthe new screen edge\nthe surface\nClient-side API of this protocol\nServer-side API of this protocol\nProtocol for managing PipeWire feeds of the different …\nIndicates we are done with the stream and the …\nNotifies that the server has stopped the stream. Clients …\nNotifies about a pipewire feed being created\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nOffers an error message so the client knows the created …\nThe wire opcode for this request\nThe minimal object version supporting this request\nzkde_screencast_stream_unstable_v1\nIndicates we are done with the stream and the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nA human readable translated error message.\nnode of the pipewire buffer\nDestroy the zkde_screencast_unstable_v1\nRender the cursor on the stream\nNo cursor\nSend metadata about where the cursor is through PipeWire\nStream consumer attachment attributes\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nrequests a feed from a given source\nrequests a feed from region in the workspace\nrequests a feed from a new virtual output\nrequests a feed from a new virtual output\nrequests a feed from a given source\nProtocol for managing PipeWire feeds of the different …\nDestroy the zkde_screencast_unstable_v1\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nrequests a feed from a given source\nrequests a feed from region in the workspace\nrequests a feed from a new virtual output\nrequests a feed from a new virtual output\nrequests a feed from a given source\nuser visible description of the created output\nLogical height resolution\nLogical height resolution\nLogical height resolution\nname of the created output\nname of the created output\nRequested pointer mode\nRequested pointer mode\nRequested pointer mode\nRequested pointer mode\nRequested pointer mode\nScaling factor of the display where it’s to be displayed\nScaling factor of the output recording\nScaling factor of the display where it’s to be displayed\nLogical width resolution\nLogical width resolution\nLogical width resolution\nwindow Identifier\nLogical left position\nLogical top position\nProtocol for managing PipeWire feeds of the different …\nIndicates we are done with the stream and the …\nNotifies that the server has stopped the stream. Clients …\nNotifies about a pipewire feed being created\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nOffers an error message so the client knows the created …\nThe wire opcode for this request\nThe minimal object version supporting this request\nzkde_screencast_stream_unstable_v1\nNotifies that the server has stopped the stream. Clients …\nNotifies about a pipewire feed being created\nOffers an error message so the client knows the created …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nA human readable translated error message.\nnode of the pipewire buffer\nDestroy the zkde_screencast_unstable_v1\nRender the cursor on the stream\nNo cursor\nSend metadata about where the cursor is through PipeWire\nStream consumer attachment attributes\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nrequests a feed from a given source\nrequests a feed from region in the workspace\nrequests a feed from a new virtual output\nrequests a feed from a new virtual output\nrequests a feed from a given source\nProtocol for managing PipeWire feeds of the different …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nuser visible description of the created output\nLogical height resolution\nLogical height resolution\nLogical height resolution\nname of the created output\nname of the created output\nRequested pointer mode\nRequested pointer mode\nRequested pointer mode\nRequested pointer mode\nRequested pointer mode\nScaling factor of the display where it’s to be displayed\nScaling factor of the output recording\nScaling factor of the display where it’s to be displayed\nLogical width resolution\nLogical width resolution\nLogical width resolution\nwindow Identifier\nLogical left position\nLogical top position\nClient-side API of this protocol\nServer-side API of this protocol\nServer side window decoration manager\nClient-side decoration: The decoration is part of the …\nThe wire opcode for this event\nThe minimal object version supporting this event\nPossible values to use in request_mode and the event mode.\nThe new decoration mode applied by the server\nUndecorated: The surface is not decorated at all, neither …\norg_kde_kwin_server_decoration\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nrelease the server decoration object\nThe decoration mode the surface wants to use.\nServer-side decoration: The server embeds the surface into …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.")