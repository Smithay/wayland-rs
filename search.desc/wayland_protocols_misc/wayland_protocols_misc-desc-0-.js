searchState.loadedDescShard("wayland_protocols_misc", 0, "This crate provides Wayland object definitions for various …\nGtk primary selection protocol\nKDE server decoration protocol\nInput method v2 unstable\nVirtual keyboard v1 unstable\nClient-side API of this protocol\nServer-side API of this protocol\nX primary selection emulation\noffer to transfer primary selection contents\noffer to replace the contents of the primary selection\nintroduce a new wp_primary_selection_offer\ndestroy the primary selection device\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\ngtk_primary_selection_device\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nadvertise a new primary selection\nset the primary selection\ndestroy the primary selection device\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nset the primary selection\nserial of the event that triggered this request\ncreate a new primary selection source\ndestroy the primary selection device manager\ncreate a new primary selection device\nX primary selection emulation\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\ncreate a new primary selection source\ndestroy the primary selection device manager\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\ncreate a new primary selection device\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\ndestroy the primary selection offer\nThe wire opcode for this event\nThe minimal object version supporting this event\noffer to transfer primary selection contents\nadvertise offered mime type\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nrequest that the data is transferred\ndestroy the primary selection offer\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nrequest that the data is transferred\nrequest for primary selection contents was canceled\ndestroy the primary selection source\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\noffer to replace the contents of the primary selection\nadd an offered mime type\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nsend the primary selection contents\ndestroy the primary selection source\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nadd an offered mime type\nGet the opcode number of this message\nGet the opcode number of this message\nX primary selection emulation\noffer to transfer primary selection contents\noffer to replace the contents of the primary selection\nintroduce a new wp_primary_selection_offer\ndestroy the primary selection device\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\ngtk_primary_selection_device\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nadvertise a new primary selection\nset the primary selection\nintroduce a new wp_primary_selection_offer\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nadvertise a new primary selection\nserial of the event that triggered this request\ncreate a new primary selection source\ndestroy the primary selection device manager\ncreate a new primary selection device\nX primary selection emulation\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\ndestroy the primary selection offer\nThe wire opcode for this event\nThe minimal object version supporting this event\noffer to transfer primary selection contents\nadvertise offered mime type\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nrequest that the data is transferred\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nadvertise offered mime type\nGet the opcode number of this message\nGet the opcode number of this message\nrequest for primary selection contents was canceled\ndestroy the primary selection source\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\noffer to replace the contents of the primary selection\nadd an offered mime type\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nsend the primary selection contents\nrequest for primary selection contents was canceled\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nsend the primary selection contents\nClient-side API of this protocol\nServer-side API of this protocol\nServer side window decoration manager\nClient-side decoration: The decoration is part of the …\nThe wire opcode for this event\nThe minimal object version supporting this event\nPossible values to use in request_mode and the event mode.\nThe new decoration mode applied by the server\nUndecorated: The surface is not decorated at all, neither …\norg_kde_kwin_server_decoration\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nrelease the server decoration object\nThe decoration mode the surface wants to use.\nServer-side decoration: The server embeds the surface into …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nrelease the server decoration object\nThe decoration mode the surface wants to use.\nThe decoration mode applied to the surface by the server.\nThe mode this surface wants to use.\nClient-side decoration: The decoration is part of the …\nCreate a server-side decoration object for a given surface\nThe default mode used on the server\nThe wire opcode for this event\nThe minimal object version supporting this event\nPossible values to use in request_mode and the event mode.\nUndecorated: The surface is not decorated at all, neither …\nServer side window decoration manager\nThe wire opcode for this request\nThe minimal object version supporting this request\nServer-side decoration: The server embeds the surface into …\nCreate a server-side decoration object for a given surface\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nThe default decoration mode applied to newly created …\nServer side window decoration manager\nClient-side decoration: The decoration is part of the …\nThe wire opcode for this event\nThe minimal object version supporting this event\nPossible values to use in request_mode and the event mode.\nThe new decoration mode applied by the server\nUndecorated: The surface is not decorated at all, neither …\norg_kde_kwin_server_decoration\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nrelease the server decoration object\nThe decoration mode the surface wants to use.\nServer-side decoration: The server embeds the surface into …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe new decoration mode applied by the server\nGet the opcode number of this message\nGet the opcode number of this message\nThe decoration mode applied to the surface by the server.\nThe mode this surface wants to use.\nClient-side decoration: The decoration is part of the …\nCreate a server-side decoration object for a given surface\nThe default mode used on the server\nThe wire opcode for this event\nThe minimal object version supporting this event\nPossible values to use in request_mode and the event mode.\nUndecorated: The surface is not decorated at all, neither …\nServer side window decoration manager\nThe wire opcode for this request\nThe minimal object version supporting this request\nServer-side decoration: The server embeds the surface into …\nThe default mode used on the server\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nThe default decoration mode applied to newly created …\nClient-side API of this protocol\nServer-side API of this protocol\nkeyboard grab\ninput method manager\ninput method\npopup surface\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nkey event\nkeyboard mapping\nmodifier and group state\nThe wire opcode for this request\nThe minimal object version supporting this request\nrelease the grab object\nrepeat rate and delay\nkeyboard grab\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nrelease the grab object\ndelay in milliseconds since key down until repeating starts\nkeymap file descriptor\nkeymap format\nkeyboard layout\nkey that produced the event\ndepressed modifiers\nlatched modifiers\nlocked modifiers\nthe rate of repeating keys in characters per second\nserial number of the key event\nserial number of the modifiers event\nkeymap size, in bytes\nphysical state of the key\ntimestamp with millisecond granularity\ndestroy the input method manager\nrequest an input method object\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\ninput method manager\ndestroy the input method manager\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nrequest an input method object\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\ninput method has been requested\napply state\ncommit string\ncontent purpose and hint\ndeactivate event\ndelete text\ndestroy the text input\napply state\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\ncreate popup surface\ngrab hardware keyboard\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\npre-edit string\nsurrounding text event\nindicates the cause of surrounding text change\ninput method unavailable\ninput method\napply state\ncommit string\ndelete text\ndestroy the text input\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\ncreate popup surface\ngrab hardware keyboard\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\npre-edit string\nThis is a destructor, once sent this object cannot be used …\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this request\nThe minimal object version supporting this request\nset text input area position\npopup surface\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nkeyboard grab\ninput method manager\ninput method\npopup surface\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nkey event\nkeyboard mapping\nmodifier and group state\nThe wire opcode for this request\nThe minimal object version supporting this request\nrelease the grab object\nrepeat rate and delay\nkeyboard grab\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nkey event\nkeyboard mapping\nmodifier and group state\nGet the opcode number of this message\nGet the opcode number of this message\nrepeat rate and delay\ndelay in milliseconds since key down until repeating starts\nkeymap file descriptor\nkeymap format\nkeyboard layout\nkey that produced the event\ndepressed modifiers\nlatched modifiers\nlocked modifiers\nthe rate of repeating keys in characters per second\nserial number of the key event\nserial number of the modifiers event\nkeymap size, in bytes\nphysical state of the key\ntimestamp with millisecond granularity\ndestroy the input method manager\nrequest an input method object\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\ninput method manager\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\ninput method has been requested\napply state\ncommit string\ncontent purpose and hint\ndeactivate event\ndelete text\ndestroy the text input\napply state\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this event\nThe minimal object version supporting this event\ncreate popup surface\ngrab hardware keyboard\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\npre-edit string\nsurrounding text event\nindicates the cause of surrounding text change\ninput method unavailable\ninput method\ninput method has been requested\ncontent purpose and hint\ndeactivate event\napply state\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nsurrounding text event\nindicates the cause of surrounding text change\ninput method unavailable\nThis is a destructor, once received this object cannot be …\nThe wire opcode for this event\nThe minimal object version supporting this event\nThe wire opcode for this request\nThe minimal object version supporting this request\nset text input area position\npopup surface\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nset text input area position\nClient-side API of this protocol\nServer-side API of this protocol\nvirtual keyboard manager\nvirtual keyboard\nCreate a new virtual keyboard\nThe wire opcode for this request\nThe minimal object version supporting this request\nclient not authorized to use the interface\nvirtual keyboard manager\nCreate a new virtual keyboard\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\ndestroy the virtual keyboard keyboard object\nkey event\nkeyboard mapping\nmodifier and group state\nNo keymap was set\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nvirtual keyboard\ndestroy the virtual keyboard keyboard object\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nkey event\nkeyboard mapping\nmodifier and group state\nGet the opcode number of this message\nGet the opcode number of this message\nkeymap file descriptor\nkeymap format\nkeyboard layout\nkey that produced the event\ndepressed modifiers\nlatched modifiers\nlocked modifiers\nkeymap size, in bytes\nphysical state of the key\ntimestamp with millisecond granularity\nvirtual keyboard manager\nvirtual keyboard\nCreate a new virtual keyboard\nThe wire opcode for this request\nThe minimal object version supporting this request\nclient not authorized to use the interface\nvirtual keyboard manager\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\ndestroy the virtual keyboard keyboard object\nkey event\nkeyboard mapping\nmodifier and group state\nNo keymap was set\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nThe wire opcode for this request\nThe minimal object version supporting this request\nvirtual keyboard\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the opcode number of this message\nGet the opcode number of this message\nkeymap file descriptor\nkeymap format\nkeyboard layout\nkey that produced the event\ndepressed modifiers\nlatched modifiers\nlocked modifiers\nkeymap size, in bytes\nphysical state of the key\ntimestamp with millisecond granularity")